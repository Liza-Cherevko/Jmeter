/*
   Licensed to the Apache Software Foundation (ASF) under one or more
   contributor license agreements.  See the NOTICE file distributed with
   this work for additional information regarding copyright ownership.
   The ASF licenses this file to You under the Apache License, Version 2.0
   (the "License"); you may not use this file except in compliance with
   the License.  You may obtain a copy of the License at

       http://www.apache.org/licenses/LICENSE-2.0

   Unless required by applicable law or agreed to in writing, software
   distributed under the License is distributed on an "AS IS" BASIS,
   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   See the License for the specific language governing permissions and
   limitations under the License.
*/
$(document).ready(function() {

    $(".click-title").mouseenter( function(    e){
        e.preventDefault();
        this.style.cursor="pointer";
    });
    $(".click-title").mousedown( function(event){
        event.preventDefault();
    });

    // Ugly code while this script is shared among several pages
    try{
        refreshHitsPerSecond(true);
    } catch(e){}
    try{
        refreshResponseTimeOverTime(true);
    } catch(e){}
    try{
        refreshResponseTimePercentiles();
    } catch(e){}
});


var responseTimePercentilesInfos = {
        data: {"result": {"minY": 0.0, "minX": 0.0, "maxY": 6471.0, "series": [{"data": [[0.0, 0.0], [0.1, 0.0], [0.2, 0.0], [0.3, 0.0], [0.4, 0.0], [0.5, 0.0], [0.6, 0.0], [0.7, 0.0], [0.8, 0.0], [0.9, 0.0], [1.0, 0.0], [1.1, 0.0], [1.2, 0.0], [1.3, 0.0], [1.4, 0.0], [1.5, 0.0], [1.6, 0.0], [1.7, 0.0], [1.8, 0.0], [1.9, 0.0], [2.0, 0.0], [2.1, 0.0], [2.2, 0.0], [2.3, 0.0], [2.4, 0.0], [2.5, 0.0], [2.6, 0.0], [2.7, 0.0], [2.8, 0.0], [2.9, 0.0], [3.0, 0.0], [3.1, 0.0], [3.2, 0.0], [3.3, 0.0], [3.4, 0.0], [3.5, 0.0], [3.6, 0.0], [3.7, 0.0], [3.8, 0.0], [3.9, 0.0], [4.0, 0.0], [4.1, 0.0], [4.2, 0.0], [4.3, 0.0], [4.4, 0.0], [4.5, 0.0], [4.6, 0.0], [4.7, 0.0], [4.8, 0.0], [4.9, 0.0], [5.0, 0.0], [5.1, 0.0], [5.2, 0.0], [5.3, 0.0], [5.4, 0.0], [5.5, 0.0], [5.6, 0.0], [5.7, 0.0], [5.8, 0.0], [5.9, 0.0], [6.0, 0.0], [6.1, 0.0], [6.2, 0.0], [6.3, 0.0], [6.4, 0.0], [6.5, 0.0], [6.6, 0.0], [6.7, 0.0], [6.8, 0.0], [6.9, 0.0], [7.0, 0.0], [7.1, 0.0], [7.2, 1.0], [7.3, 1.0], [7.4, 1.0], [7.5, 1.0], [7.6, 1.0], [7.7, 1.0], [7.8, 1.0], [7.9, 1.0], [8.0, 1.0], [8.1, 1.0], [8.2, 1.0], [8.3, 1.0], [8.4, 1.0], [8.5, 1.0], [8.6, 1.0], [8.7, 1.0], [8.8, 1.0], [8.9, 1.0], [9.0, 1.0], [9.1, 1.0], [9.2, 1.0], [9.3, 1.0], [9.4, 1.0], [9.5, 1.0], [9.6, 1.0], [9.7, 1.0], [9.8, 1.0], [9.9, 1.0], [10.0, 1.0], [10.1, 1.0], [10.2, 1.0], [10.3, 1.0], [10.4, 1.0], [10.5, 1.0], [10.6, 1.0], [10.7, 1.0], [10.8, 1.0], [10.9, 1.0], [11.0, 1.0], [11.1, 1.0], [11.2, 1.0], [11.3, 1.0], [11.4, 1.0], [11.5, 1.0], [11.6, 1.0], [11.7, 1.0], [11.8, 1.0], [11.9, 1.0], [12.0, 1.0], [12.1, 1.0], [12.2, 1.0], [12.3, 1.0], [12.4, 1.0], [12.5, 1.0], [12.6, 1.0], [12.7, 1.0], [12.8, 1.0], [12.9, 1.0], [13.0, 1.0], [13.1, 1.0], [13.2, 1.0], [13.3, 1.0], [13.4, 1.0], [13.5, 1.0], [13.6, 1.0], [13.7, 1.0], [13.8, 1.0], [13.9, 1.0], [14.0, 1.0], [14.1, 1.0], [14.2, 1.0], [14.3, 1.0], [14.4, 1.0], [14.5, 1.0], [14.6, 1.0], [14.7, 1.0], [14.8, 1.0], [14.9, 1.0], [15.0, 1.0], [15.1, 1.0], [15.2, 1.0], [15.3, 1.0], [15.4, 1.0], [15.5, 1.0], [15.6, 1.0], [15.7, 1.0], [15.8, 1.0], [15.9, 1.0], [16.0, 1.0], [16.1, 1.0], [16.2, 1.0], [16.3, 1.0], [16.4, 1.0], [16.5, 1.0], [16.6, 1.0], [16.7, 1.0], [16.8, 1.0], [16.9, 1.0], [17.0, 1.0], [17.1, 1.0], [17.2, 1.0], [17.3, 1.0], [17.4, 1.0], [17.5, 1.0], [17.6, 1.0], [17.7, 1.0], [17.8, 1.0], [17.9, 1.0], [18.0, 1.0], [18.1, 1.0], [18.2, 1.0], [18.3, 1.0], [18.4, 1.0], [18.5, 1.0], [18.6, 1.0], [18.7, 1.0], [18.8, 1.0], [18.9, 1.0], [19.0, 1.0], [19.1, 1.0], [19.2, 1.0], [19.3, 1.0], [19.4, 1.0], [19.5, 1.0], [19.6, 1.0], [19.7, 1.0], [19.8, 1.0], [19.9, 1.0], [20.0, 1.0], [20.1, 1.0], [20.2, 1.0], [20.3, 1.0], [20.4, 1.0], [20.5, 1.0], [20.6, 1.0], [20.7, 1.0], [20.8, 1.0], [20.9, 1.0], [21.0, 1.0], [21.1, 1.0], [21.2, 1.0], [21.3, 1.0], [21.4, 1.0], [21.5, 1.0], [21.6, 1.0], [21.7, 1.0], [21.8, 1.0], [21.9, 1.0], [22.0, 1.0], [22.1, 1.0], [22.2, 1.0], [22.3, 1.0], [22.4, 1.0], [22.5, 1.0], [22.6, 1.0], [22.7, 1.0], [22.8, 1.0], [22.9, 1.0], [23.0, 1.0], [23.1, 1.0], [23.2, 1.0], [23.3, 1.0], [23.4, 1.0], [23.5, 1.0], [23.6, 1.0], [23.7, 1.0], [23.8, 1.0], [23.9, 1.0], [24.0, 1.0], [24.1, 1.0], [24.2, 1.0], [24.3, 1.0], [24.4, 1.0], [24.5, 1.0], [24.6, 1.0], [24.7, 1.0], [24.8, 1.0], [24.9, 1.0], [25.0, 1.0], [25.1, 1.0], [25.2, 1.0], [25.3, 1.0], [25.4, 1.0], [25.5, 1.0], [25.6, 1.0], [25.7, 1.0], [25.8, 1.0], [25.9, 1.0], [26.0, 1.0], [26.1, 1.0], [26.2, 1.0], [26.3, 1.0], [26.4, 1.0], [26.5, 1.0], [26.6, 1.0], [26.7, 1.0], [26.8, 1.0], [26.9, 1.0], [27.0, 1.0], [27.1, 1.0], [27.2, 1.0], [27.3, 1.0], [27.4, 1.0], [27.5, 1.0], [27.6, 1.0], [27.7, 1.0], [27.8, 1.0], [27.9, 1.0], [28.0, 1.0], [28.1, 1.0], [28.2, 1.0], [28.3, 1.0], [28.4, 1.0], [28.5, 1.0], [28.6, 1.0], [28.7, 1.0], [28.8, 1.0], [28.9, 1.0], [29.0, 1.0], [29.1, 1.0], [29.2, 1.0], [29.3, 1.0], [29.4, 1.0], [29.5, 1.0], [29.6, 1.0], [29.7, 1.0], [29.8, 1.0], [29.9, 1.0], [30.0, 1.0], [30.1, 1.0], [30.2, 1.0], [30.3, 1.0], [30.4, 1.0], [30.5, 1.0], [30.6, 1.0], [30.7, 1.0], [30.8, 1.0], [30.9, 1.0], [31.0, 1.0], [31.1, 1.0], [31.2, 1.0], [31.3, 1.0], [31.4, 1.0], [31.5, 1.0], [31.6, 1.0], [31.7, 1.0], [31.8, 1.0], [31.9, 1.0], [32.0, 1.0], [32.1, 1.0], [32.2, 1.0], [32.3, 1.0], [32.4, 1.0], [32.5, 1.0], [32.6, 1.0], [32.7, 1.0], [32.8, 1.0], [32.9, 1.0], [33.0, 1.0], [33.1, 1.0], [33.2, 1.0], [33.3, 1.0], [33.4, 1.0], [33.5, 1.0], [33.6, 1.0], [33.7, 1.0], [33.8, 1.0], [33.9, 1.0], [34.0, 1.0], [34.1, 1.0], [34.2, 1.0], [34.3, 1.0], [34.4, 1.0], [34.5, 1.0], [34.6, 1.0], [34.7, 1.0], [34.8, 1.0], [34.9, 1.0], [35.0, 1.0], [35.1, 1.0], [35.2, 1.0], [35.3, 1.0], [35.4, 1.0], [35.5, 1.0], [35.6, 1.0], [35.7, 1.0], [35.8, 1.0], [35.9, 1.0], [36.0, 1.0], [36.1, 1.0], [36.2, 1.0], [36.3, 1.0], [36.4, 1.0], [36.5, 1.0], [36.6, 1.0], [36.7, 1.0], [36.8, 1.0], [36.9, 1.0], [37.0, 1.0], [37.1, 1.0], [37.2, 1.0], [37.3, 1.0], [37.4, 1.0], [37.5, 1.0], [37.6, 1.0], [37.7, 1.0], [37.8, 1.0], [37.9, 1.0], [38.0, 1.0], [38.1, 1.0], [38.2, 1.0], [38.3, 1.0], [38.4, 1.0], [38.5, 1.0], [38.6, 1.0], [38.7, 1.0], [38.8, 1.0], [38.9, 1.0], [39.0, 1.0], [39.1, 1.0], [39.2, 1.0], [39.3, 1.0], [39.4, 1.0], [39.5, 1.0], [39.6, 1.0], [39.7, 1.0], [39.8, 1.0], [39.9, 1.0], [40.0, 1.0], [40.1, 1.0], [40.2, 1.0], [40.3, 1.0], [40.4, 1.0], [40.5, 1.0], [40.6, 1.0], [40.7, 1.0], [40.8, 1.0], [40.9, 1.0], [41.0, 1.0], [41.1, 1.0], [41.2, 1.0], [41.3, 1.0], [41.4, 1.0], [41.5, 1.0], [41.6, 1.0], [41.7, 1.0], [41.8, 1.0], [41.9, 1.0], [42.0, 1.0], [42.1, 1.0], [42.2, 1.0], [42.3, 1.0], [42.4, 1.0], [42.5, 1.0], [42.6, 1.0], [42.7, 1.0], [42.8, 1.0], [42.9, 1.0], [43.0, 1.0], [43.1, 1.0], [43.2, 1.0], [43.3, 1.0], [43.4, 1.0], [43.5, 1.0], [43.6, 1.0], [43.7, 1.0], [43.8, 1.0], [43.9, 1.0], [44.0, 1.0], [44.1, 1.0], [44.2, 1.0], [44.3, 1.0], [44.4, 1.0], [44.5, 1.0], [44.6, 1.0], [44.7, 1.0], [44.8, 1.0], [44.9, 1.0], [45.0, 1.0], [45.1, 1.0], [45.2, 1.0], [45.3, 1.0], [45.4, 1.0], [45.5, 1.0], [45.6, 1.0], [45.7, 1.0], [45.8, 1.0], [45.9, 1.0], [46.0, 1.0], [46.1, 1.0], [46.2, 1.0], [46.3, 1.0], [46.4, 1.0], [46.5, 1.0], [46.6, 1.0], [46.7, 1.0], [46.8, 1.0], [46.9, 1.0], [47.0, 1.0], [47.1, 1.0], [47.2, 1.0], [47.3, 1.0], [47.4, 1.0], [47.5, 1.0], [47.6, 1.0], [47.7, 1.0], [47.8, 1.0], [47.9, 1.0], [48.0, 1.0], [48.1, 1.0], [48.2, 1.0], [48.3, 1.0], [48.4, 1.0], [48.5, 1.0], [48.6, 1.0], [48.7, 1.0], [48.8, 1.0], [48.9, 1.0], [49.0, 2.0], [49.1, 2.0], [49.2, 2.0], [49.3, 2.0], [49.4, 2.0], [49.5, 2.0], [49.6, 2.0], [49.7, 2.0], [49.8, 2.0], [49.9, 2.0], [50.0, 2.0], [50.1, 2.0], [50.2, 2.0], [50.3, 2.0], [50.4, 2.0], [50.5, 2.0], [50.6, 2.0], [50.7, 2.0], [50.8, 2.0], [50.9, 2.0], [51.0, 2.0], [51.1, 2.0], [51.2, 2.0], [51.3, 2.0], [51.4, 2.0], [51.5, 2.0], [51.6, 2.0], [51.7, 2.0], [51.8, 2.0], [51.9, 2.0], [52.0, 2.0], [52.1, 2.0], [52.2, 2.0], [52.3, 2.0], [52.4, 2.0], [52.5, 2.0], [52.6, 2.0], [52.7, 2.0], [52.8, 2.0], [52.9, 2.0], [53.0, 2.0], [53.1, 2.0], [53.2, 2.0], [53.3, 2.0], [53.4, 2.0], [53.5, 2.0], [53.6, 2.0], [53.7, 2.0], [53.8, 2.0], [53.9, 2.0], [54.0, 2.0], [54.1, 2.0], [54.2, 2.0], [54.3, 2.0], [54.4, 2.0], [54.5, 2.0], [54.6, 2.0], [54.7, 2.0], [54.8, 2.0], [54.9, 2.0], [55.0, 2.0], [55.1, 2.0], [55.2, 2.0], [55.3, 2.0], [55.4, 2.0], [55.5, 2.0], [55.6, 2.0], [55.7, 2.0], [55.8, 2.0], [55.9, 2.0], [56.0, 2.0], [56.1, 2.0], [56.2, 3.0], [56.3, 3.0], [56.4, 3.0], [56.5, 3.0], [56.6, 3.0], [56.7, 3.0], [56.8, 3.0], [56.9, 3.0], [57.0, 4.0], [57.1, 4.0], [57.2, 5.0], [57.3, 5.0], [57.4, 5.0], [57.5, 6.0], [57.6, 6.0], [57.7, 6.0], [57.8, 6.0], [57.9, 7.0], [58.0, 7.0], [58.1, 8.0], [58.2, 8.0], [58.3, 9.0], [58.4, 9.0], [58.5, 9.0], [58.6, 9.0], [58.7, 9.0], [58.8, 10.0], [58.9, 10.0], [59.0, 10.0], [59.1, 10.0], [59.2, 10.0], [59.3, 10.0], [59.4, 11.0], [59.5, 11.0], [59.6, 11.0], [59.7, 11.0], [59.8, 11.0], [59.9, 11.0], [60.0, 11.0], [60.1, 12.0], [60.2, 12.0], [60.3, 12.0], [60.4, 12.0], [60.5, 12.0], [60.6, 12.0], [60.7, 12.0], [60.8, 13.0], [60.9, 13.0], [61.0, 13.0], [61.1, 13.0], [61.2, 13.0], [61.3, 14.0], [61.4, 14.0], [61.5, 14.0], [61.6, 15.0], [61.7, 15.0], [61.8, 15.0], [61.9, 15.0], [62.0, 15.0], [62.1, 16.0], [62.2, 16.0], [62.3, 16.0], [62.4, 16.0], [62.5, 16.0], [62.6, 17.0], [62.7, 18.0], [62.8, 18.0], [62.9, 18.0], [63.0, 19.0], [63.1, 19.0], [63.2, 20.0], [63.3, 20.0], [63.4, 21.0], [63.5, 22.0], [63.6, 23.0], [63.7, 24.0], [63.8, 25.0], [63.9, 25.0], [64.0, 25.0], [64.1, 26.0], [64.2, 26.0], [64.3, 27.0], [64.4, 32.0], [64.5, 33.0], [64.6, 37.0], [64.7, 38.0], [64.8, 39.0], [64.9, 40.0], [65.0, 43.0], [65.1, 43.0], [65.2, 44.0], [65.3, 46.0], [65.4, 47.0], [65.5, 48.0], [65.6, 51.0], [65.7, 53.0], [65.8, 54.0], [65.9, 55.0], [66.0, 56.0], [66.1, 60.0], [66.2, 60.0], [66.3, 62.0], [66.4, 72.0], [66.5, 76.0], [66.6, 83.0], [66.7, 158.0], [66.8, 229.0], [66.9, 234.0], [67.0, 235.0], [67.1, 248.0], [67.2, 249.0], [67.3, 249.0], [67.4, 249.0], [67.5, 249.0], [67.6, 250.0], [67.7, 250.0], [67.8, 250.0], [67.9, 250.0], [68.0, 250.0], [68.1, 251.0], [68.2, 251.0], [68.3, 251.0], [68.4, 259.0], [68.5, 320.0], [68.6, 321.0], [68.7, 332.0], [68.8, 333.0], [68.9, 335.0], [69.0, 336.0], [69.1, 336.0], [69.2, 336.0], [69.3, 336.0], [69.4, 336.0], [69.5, 336.0], [69.6, 339.0], [69.7, 339.0], [69.8, 340.0], [69.9, 340.0], [70.0, 340.0], [70.1, 340.0], [70.2, 340.0], [70.3, 341.0], [70.4, 341.0], [70.5, 341.0], [70.6, 341.0], [70.7, 341.0], [70.8, 341.0], [70.9, 345.0], [71.0, 345.0], [71.1, 349.0], [71.2, 349.0], [71.3, 350.0], [71.4, 350.0], [71.5, 351.0], [71.6, 351.0], [71.7, 352.0], [71.8, 352.0], [71.9, 353.0], [72.0, 353.0], [72.1, 354.0], [72.2, 354.0], [72.3, 355.0], [72.4, 355.0], [72.5, 356.0], [72.6, 362.0], [72.7, 362.0], [72.8, 362.0], [72.9, 364.0], [73.0, 364.0], [73.1, 365.0], [73.2, 365.0], [73.3, 365.0], [73.4, 366.0], [73.5, 366.0], [73.6, 366.0], [73.7, 366.0], [73.8, 366.0], [73.9, 366.0], [74.0, 366.0], [74.1, 367.0], [74.2, 368.0], [74.3, 369.0], [74.4, 372.0], [74.5, 373.0], [74.6, 373.0], [74.7, 374.0], [74.8, 374.0], [74.9, 374.0], [75.0, 375.0], [75.1, 378.0], [75.2, 379.0], [75.3, 379.0], [75.4, 380.0], [75.5, 380.0], [75.6, 380.0], [75.7, 381.0], [75.8, 381.0], [75.9, 381.0], [76.0, 381.0], [76.1, 381.0], [76.2, 381.0], [76.3, 382.0], [76.4, 382.0], [76.5, 382.0], [76.6, 383.0], [76.7, 384.0], [76.8, 385.0], [76.9, 386.0], [77.0, 386.0], [77.1, 390.0], [77.2, 403.0], [77.3, 403.0], [77.4, 404.0], [77.5, 404.0], [77.6, 404.0], [77.7, 404.0], [77.8, 404.0], [77.9, 404.0], [78.0, 404.0], [78.1, 405.0], [78.2, 405.0], [78.3, 405.0], [78.4, 406.0], [78.5, 406.0], [78.6, 406.0], [78.7, 407.0], [78.8, 408.0], [78.9, 408.0], [79.0, 408.0], [79.1, 409.0], [79.2, 409.0], [79.3, 409.0], [79.4, 409.0], [79.5, 409.0], [79.6, 410.0], [79.7, 411.0], [79.8, 418.0], [79.9, 419.0], [80.0, 419.0], [80.1, 420.0], [80.2, 420.0], [80.3, 420.0], [80.4, 421.0], [80.5, 422.0], [80.6, 423.0], [80.7, 426.0], [80.8, 433.0], [80.9, 434.0], [81.0, 435.0], [81.1, 440.0], [81.2, 441.0], [81.3, 445.0], [81.4, 445.0], [81.5, 446.0], [81.6, 447.0], [81.7, 447.0], [81.8, 448.0], [81.9, 448.0], [82.0, 449.0], [82.1, 450.0], [82.2, 450.0], [82.3, 451.0], [82.4, 452.0], [82.5, 475.0], [82.6, 476.0], [82.7, 481.0], [82.8, 482.0], [82.9, 482.0], [83.0, 482.0], [83.1, 482.0], [83.2, 482.0], [83.3, 483.0], [83.4, 483.0], [83.5, 483.0], [83.6, 483.0], [83.7, 484.0], [83.8, 484.0], [83.9, 484.0], [84.0, 484.0], [84.1, 484.0], [84.2, 484.0], [84.3, 484.0], [84.4, 484.0], [84.5, 485.0], [84.6, 487.0], [84.7, 492.0], [84.8, 492.0], [84.9, 493.0], [85.0, 493.0], [85.1, 493.0], [85.2, 493.0], [85.3, 493.0], [85.4, 494.0], [85.5, 495.0], [85.6, 498.0], [85.7, 499.0], [85.8, 500.0], [85.9, 505.0], [86.0, 506.0], [86.1, 507.0], [86.2, 508.0], [86.3, 508.0], [86.4, 508.0], [86.5, 509.0], [86.6, 510.0], [86.7, 519.0], [86.8, 519.0], [86.9, 519.0], [87.0, 520.0], [87.1, 523.0], [87.2, 523.0], [87.3, 526.0], [87.4, 527.0], [87.5, 527.0], [87.6, 527.0], [87.7, 528.0], [87.8, 528.0], [87.9, 529.0], [88.0, 529.0], [88.1, 531.0], [88.2, 531.0], [88.3, 532.0], [88.4, 538.0], [88.5, 539.0], [88.6, 539.0], [88.7, 540.0], [88.8, 540.0], [88.9, 540.0], [89.0, 540.0], [89.1, 540.0], [89.2, 541.0], [89.3, 541.0], [89.4, 541.0], [89.5, 541.0], [89.6, 542.0], [89.7, 542.0], [89.8, 542.0], [89.9, 543.0], [90.0, 543.0], [90.1, 543.0], [90.2, 543.0], [90.3, 543.0], [90.4, 543.0], [90.5, 544.0], [90.6, 547.0], [90.7, 549.0], [90.8, 550.0], [90.9, 551.0], [91.0, 552.0], [91.1, 553.0], [91.2, 553.0], [91.3, 554.0], [91.4, 555.0], [91.5, 555.0], [91.6, 555.0], [91.7, 555.0], [91.8, 556.0], [91.9, 557.0], [92.0, 558.0], [92.1, 576.0], [92.2, 577.0], [92.3, 577.0], [92.4, 621.0], [92.5, 627.0], [92.6, 674.0], [92.7, 674.0], [92.8, 676.0], [92.9, 676.0], [93.0, 677.0], [93.1, 677.0], [93.2, 678.0], [93.3, 678.0], [93.4, 678.0], [93.5, 678.0], [93.6, 679.0], [93.7, 681.0], [93.8, 683.0], [93.9, 684.0], [94.0, 684.0], [94.1, 686.0], [94.2, 687.0], [94.3, 698.0], [94.4, 700.0], [94.5, 727.0], [94.6, 728.0], [94.7, 729.0], [94.8, 730.0], [94.9, 732.0], [95.0, 733.0], [95.1, 734.0], [95.2, 734.0], [95.3, 735.0], [95.4, 735.0], [95.5, 736.0], [95.6, 737.0], [95.7, 738.0], [95.8, 739.0], [95.9, 741.0], [96.0, 745.0], [96.1, 746.0], [96.2, 748.0], [96.3, 749.0], [96.4, 749.0], [96.5, 750.0], [96.6, 832.0], [96.7, 835.0], [96.8, 836.0], [96.9, 836.0], [97.0, 836.0], [97.1, 840.0], [97.2, 840.0], [97.3, 840.0], [97.4, 841.0], [97.5, 841.0], [97.6, 841.0], [97.7, 842.0], [97.8, 842.0], [97.9, 950.0], [98.0, 951.0], [98.1, 952.0], [98.2, 971.0], [98.3, 974.0], [98.4, 983.0], [98.5, 998.0], [98.6, 999.0], [98.7, 1007.0], [98.8, 1007.0], [98.9, 1007.0], [99.0, 1007.0], [99.1, 1007.0], [99.2, 1008.0], [99.3, 1008.0], [99.4, 1008.0], [99.5, 1008.0], [99.6, 1009.0], [99.7, 1010.0], [99.8, 1010.0], [99.9, 1010.0]], "isOverall": false, "label": "Delete", "isController": false}, {"data": [[0.0, 0.0], [0.1, 0.0], [0.2, 0.0], [0.3, 0.0], [0.4, 0.0], [0.5, 0.0], [0.6, 0.0], [0.7, 0.0], [0.8, 0.0], [0.9, 0.0], [1.0, 0.0], [1.1, 0.0], [1.2, 0.0], [1.3, 0.0], [1.4, 0.0], [1.5, 0.0], [1.6, 0.0], [1.7, 0.0], [1.8, 0.0], [1.9, 0.0], [2.0, 0.0], [2.1, 0.0], [2.2, 0.0], [2.3, 0.0], [2.4, 0.0], [2.5, 0.0], [2.6, 0.0], [2.7, 0.0], [2.8, 0.0], [2.9, 0.0], [3.0, 0.0], [3.1, 0.0], [3.2, 0.0], [3.3, 0.0], [3.4, 0.0], [3.5, 0.0], [3.6, 0.0], [3.7, 0.0], [3.8, 0.0], [3.9, 0.0], [4.0, 0.0], [4.1, 0.0], [4.2, 0.0], [4.3, 0.0], [4.4, 0.0], [4.5, 0.0], [4.6, 0.0], [4.7, 0.0], [4.8, 0.0], [4.9, 0.0], [5.0, 0.0], [5.1, 0.0], [5.2, 0.0], [5.3, 0.0], [5.4, 0.0], [5.5, 0.0], [5.6, 0.0], [5.7, 0.0], [5.8, 0.0], [5.9, 0.0], [6.0, 0.0], [6.1, 0.0], [6.2, 0.0], [6.3, 0.0], [6.4, 0.0], [6.5, 0.0], [6.6, 0.0], [6.7, 0.0], [6.8, 0.0], [6.9, 0.0], [7.0, 0.0], [7.1, 0.0], [7.2, 0.0], [7.3, 0.0], [7.4, 0.0], [7.5, 0.0], [7.6, 0.0], [7.7, 0.0], [7.8, 0.0], [7.9, 0.0], [8.0, 0.0], [8.1, 0.0], [8.2, 0.0], [8.3, 0.0], [8.4, 1.0], [8.5, 1.0], [8.6, 1.0], [8.7, 1.0], [8.8, 1.0], [8.9, 1.0], [9.0, 1.0], [9.1, 1.0], [9.2, 1.0], [9.3, 1.0], [9.4, 1.0], [9.5, 1.0], [9.6, 1.0], [9.7, 1.0], [9.8, 1.0], [9.9, 1.0], [10.0, 1.0], [10.1, 1.0], [10.2, 1.0], [10.3, 1.0], [10.4, 1.0], [10.5, 1.0], [10.6, 1.0], [10.7, 1.0], [10.8, 1.0], [10.9, 1.0], [11.0, 1.0], [11.1, 1.0], [11.2, 1.0], [11.3, 1.0], [11.4, 1.0], [11.5, 1.0], [11.6, 1.0], [11.7, 1.0], [11.8, 1.0], [11.9, 1.0], [12.0, 1.0], [12.1, 1.0], [12.2, 1.0], [12.3, 1.0], [12.4, 1.0], [12.5, 1.0], [12.6, 1.0], [12.7, 1.0], [12.8, 1.0], [12.9, 1.0], [13.0, 1.0], [13.1, 1.0], [13.2, 1.0], [13.3, 1.0], [13.4, 1.0], [13.5, 1.0], [13.6, 1.0], [13.7, 1.0], [13.8, 1.0], [13.9, 1.0], [14.0, 1.0], [14.1, 1.0], [14.2, 1.0], [14.3, 1.0], [14.4, 1.0], [14.5, 1.0], [14.6, 1.0], [14.7, 1.0], [14.8, 1.0], [14.9, 1.0], [15.0, 1.0], [15.1, 1.0], [15.2, 1.0], [15.3, 1.0], [15.4, 1.0], [15.5, 1.0], [15.6, 1.0], [15.7, 1.0], [15.8, 1.0], [15.9, 1.0], [16.0, 1.0], [16.1, 1.0], [16.2, 1.0], [16.3, 1.0], [16.4, 1.0], [16.5, 1.0], [16.6, 1.0], [16.7, 1.0], [16.8, 1.0], [16.9, 1.0], [17.0, 1.0], [17.1, 1.0], [17.2, 1.0], [17.3, 1.0], [17.4, 1.0], [17.5, 1.0], [17.6, 1.0], [17.7, 1.0], [17.8, 1.0], [17.9, 1.0], [18.0, 1.0], [18.1, 1.0], [18.2, 1.0], [18.3, 1.0], [18.4, 1.0], [18.5, 1.0], [18.6, 1.0], [18.7, 1.0], [18.8, 1.0], [18.9, 1.0], [19.0, 1.0], [19.1, 1.0], [19.2, 1.0], [19.3, 1.0], [19.4, 1.0], [19.5, 1.0], [19.6, 1.0], [19.7, 1.0], [19.8, 1.0], [19.9, 1.0], [20.0, 1.0], [20.1, 1.0], [20.2, 1.0], [20.3, 1.0], [20.4, 1.0], [20.5, 1.0], [20.6, 1.0], [20.7, 1.0], [20.8, 1.0], [20.9, 1.0], [21.0, 1.0], [21.1, 1.0], [21.2, 1.0], [21.3, 1.0], [21.4, 1.0], [21.5, 1.0], [21.6, 1.0], [21.7, 1.0], [21.8, 1.0], [21.9, 1.0], [22.0, 1.0], [22.1, 1.0], [22.2, 1.0], [22.3, 1.0], [22.4, 1.0], [22.5, 1.0], [22.6, 1.0], [22.7, 1.0], [22.8, 1.0], [22.9, 1.0], [23.0, 1.0], [23.1, 1.0], [23.2, 1.0], [23.3, 1.0], [23.4, 1.0], [23.5, 1.0], [23.6, 1.0], [23.7, 1.0], [23.8, 1.0], [23.9, 1.0], [24.0, 1.0], [24.1, 1.0], [24.2, 1.0], [24.3, 1.0], [24.4, 1.0], [24.5, 1.0], [24.6, 1.0], [24.7, 1.0], [24.8, 1.0], [24.9, 1.0], [25.0, 1.0], [25.1, 1.0], [25.2, 1.0], [25.3, 1.0], [25.4, 1.0], [25.5, 1.0], [25.6, 1.0], [25.7, 1.0], [25.8, 1.0], [25.9, 1.0], [26.0, 1.0], [26.1, 1.0], [26.2, 1.0], [26.3, 1.0], [26.4, 1.0], [26.5, 1.0], [26.6, 1.0], [26.7, 1.0], [26.8, 1.0], [26.9, 1.0], [27.0, 1.0], [27.1, 1.0], [27.2, 1.0], [27.3, 1.0], [27.4, 1.0], [27.5, 1.0], [27.6, 1.0], [27.7, 1.0], [27.8, 1.0], [27.9, 1.0], [28.0, 1.0], [28.1, 1.0], [28.2, 1.0], [28.3, 1.0], [28.4, 1.0], [28.5, 1.0], [28.6, 1.0], [28.7, 1.0], [28.8, 1.0], [28.9, 1.0], [29.0, 1.0], [29.1, 1.0], [29.2, 1.0], [29.3, 1.0], [29.4, 1.0], [29.5, 1.0], [29.6, 1.0], [29.7, 1.0], [29.8, 1.0], [29.9, 1.0], [30.0, 1.0], [30.1, 1.0], [30.2, 1.0], [30.3, 1.0], [30.4, 1.0], [30.5, 1.0], [30.6, 1.0], [30.7, 1.0], [30.8, 1.0], [30.9, 1.0], [31.0, 1.0], [31.1, 1.0], [31.2, 1.0], [31.3, 1.0], [31.4, 1.0], [31.5, 1.0], [31.6, 1.0], [31.7, 1.0], [31.8, 1.0], [31.9, 1.0], [32.0, 1.0], [32.1, 1.0], [32.2, 1.0], [32.3, 1.0], [32.4, 1.0], [32.5, 1.0], [32.6, 1.0], [32.7, 1.0], [32.8, 1.0], [32.9, 1.0], [33.0, 1.0], [33.1, 1.0], [33.2, 1.0], [33.3, 1.0], [33.4, 1.0], [33.5, 1.0], [33.6, 1.0], [33.7, 1.0], [33.8, 1.0], [33.9, 1.0], [34.0, 1.0], [34.1, 1.0], [34.2, 1.0], [34.3, 1.0], [34.4, 1.0], [34.5, 1.0], [34.6, 1.0], [34.7, 1.0], [34.8, 1.0], [34.9, 1.0], [35.0, 1.0], [35.1, 1.0], [35.2, 1.0], [35.3, 1.0], [35.4, 1.0], [35.5, 1.0], [35.6, 1.0], [35.7, 1.0], [35.8, 1.0], [35.9, 1.0], [36.0, 1.0], [36.1, 1.0], [36.2, 1.0], [36.3, 1.0], [36.4, 1.0], [36.5, 1.0], [36.6, 1.0], [36.7, 1.0], [36.8, 1.0], [36.9, 1.0], [37.0, 1.0], [37.1, 1.0], [37.2, 1.0], [37.3, 1.0], [37.4, 1.0], [37.5, 1.0], [37.6, 1.0], [37.7, 1.0], [37.8, 1.0], [37.9, 1.0], [38.0, 1.0], [38.1, 1.0], [38.2, 1.0], [38.3, 1.0], [38.4, 1.0], [38.5, 1.0], [38.6, 1.0], [38.7, 1.0], [38.8, 1.0], [38.9, 1.0], [39.0, 1.0], [39.1, 1.0], [39.2, 1.0], [39.3, 1.0], [39.4, 1.0], [39.5, 1.0], [39.6, 1.0], [39.7, 1.0], [39.8, 1.0], [39.9, 1.0], [40.0, 1.0], [40.1, 1.0], [40.2, 1.0], [40.3, 1.0], [40.4, 1.0], [40.5, 1.0], [40.6, 1.0], [40.7, 1.0], [40.8, 1.0], [40.9, 1.0], [41.0, 1.0], [41.1, 1.0], [41.2, 1.0], [41.3, 1.0], [41.4, 1.0], [41.5, 1.0], [41.6, 1.0], [41.7, 1.0], [41.8, 1.0], [41.9, 1.0], [42.0, 1.0], [42.1, 1.0], [42.2, 1.0], [42.3, 1.0], [42.4, 1.0], [42.5, 1.0], [42.6, 1.0], [42.7, 1.0], [42.8, 1.0], [42.9, 1.0], [43.0, 1.0], [43.1, 1.0], [43.2, 1.0], [43.3, 1.0], [43.4, 1.0], [43.5, 1.0], [43.6, 1.0], [43.7, 1.0], [43.8, 1.0], [43.9, 1.0], [44.0, 1.0], [44.1, 1.0], [44.2, 1.0], [44.3, 1.0], [44.4, 1.0], [44.5, 1.0], [44.6, 1.0], [44.7, 1.0], [44.8, 1.0], [44.9, 1.0], [45.0, 1.0], [45.1, 1.0], [45.2, 1.0], [45.3, 1.0], [45.4, 1.0], [45.5, 1.0], [45.6, 1.0], [45.7, 1.0], [45.8, 1.0], [45.9, 1.0], [46.0, 1.0], [46.1, 1.0], [46.2, 1.0], [46.3, 1.0], [46.4, 1.0], [46.5, 1.0], [46.6, 1.0], [46.7, 1.0], [46.8, 1.0], [46.9, 1.0], [47.0, 1.0], [47.1, 1.0], [47.2, 1.0], [47.3, 1.0], [47.4, 1.0], [47.5, 1.0], [47.6, 1.0], [47.7, 1.0], [47.8, 1.0], [47.9, 1.0], [48.0, 1.0], [48.1, 1.0], [48.2, 1.0], [48.3, 1.0], [48.4, 1.0], [48.5, 1.0], [48.6, 1.0], [48.7, 1.0], [48.8, 1.0], [48.9, 1.0], [49.0, 1.0], [49.1, 1.0], [49.2, 1.0], [49.3, 1.0], [49.4, 1.0], [49.5, 1.0], [49.6, 1.0], [49.7, 1.0], [49.8, 1.0], [49.9, 1.0], [50.0, 1.0], [50.1, 1.0], [50.2, 1.0], [50.3, 1.0], [50.4, 1.0], [50.5, 1.0], [50.6, 1.0], [50.7, 1.0], [50.8, 1.0], [50.9, 2.0], [51.0, 2.0], [51.1, 2.0], [51.2, 2.0], [51.3, 2.0], [51.4, 2.0], [51.5, 2.0], [51.6, 2.0], [51.7, 2.0], [51.8, 2.0], [51.9, 2.0], [52.0, 2.0], [52.1, 2.0], [52.2, 2.0], [52.3, 2.0], [52.4, 2.0], [52.5, 2.0], [52.6, 2.0], [52.7, 2.0], [52.8, 2.0], [52.9, 2.0], [53.0, 2.0], [53.1, 2.0], [53.2, 2.0], [53.3, 2.0], [53.4, 2.0], [53.5, 2.0], [53.6, 2.0], [53.7, 2.0], [53.8, 2.0], [53.9, 2.0], [54.0, 2.0], [54.1, 2.0], [54.2, 2.0], [54.3, 2.0], [54.4, 3.0], [54.5, 4.0], [54.6, 4.0], [54.7, 5.0], [54.8, 5.0], [54.9, 5.0], [55.0, 6.0], [55.1, 6.0], [55.2, 8.0], [55.3, 9.0], [55.4, 10.0], [55.5, 10.0], [55.6, 11.0], [55.7, 11.0], [55.8, 11.0], [55.9, 11.0], [56.0, 12.0], [56.1, 12.0], [56.2, 13.0], [56.3, 13.0], [56.4, 13.0], [56.5, 14.0], [56.6, 14.0], [56.7, 14.0], [56.8, 14.0], [56.9, 15.0], [57.0, 15.0], [57.1, 15.0], [57.2, 15.0], [57.3, 15.0], [57.4, 16.0], [57.5, 16.0], [57.6, 17.0], [57.7, 17.0], [57.8, 17.0], [57.9, 18.0], [58.0, 18.0], [58.1, 18.0], [58.2, 18.0], [58.3, 18.0], [58.4, 18.0], [58.5, 19.0], [58.6, 20.0], [58.7, 21.0], [58.8, 21.0], [58.9, 25.0], [59.0, 28.0], [59.1, 28.0], [59.2, 28.0], [59.3, 29.0], [59.4, 29.0], [59.5, 30.0], [59.6, 30.0], [59.7, 30.0], [59.8, 30.0], [59.9, 31.0], [60.0, 31.0], [60.1, 32.0], [60.2, 32.0], [60.3, 32.0], [60.4, 33.0], [60.5, 33.0], [60.6, 34.0], [60.7, 35.0], [60.8, 35.0], [60.9, 35.0], [61.0, 36.0], [61.1, 37.0], [61.2, 38.0], [61.3, 38.0], [61.4, 39.0], [61.5, 40.0], [61.6, 40.0], [61.7, 41.0], [61.8, 41.0], [61.9, 41.0], [62.0, 42.0], [62.1, 42.0], [62.2, 42.0], [62.3, 42.0], [62.4, 43.0], [62.5, 44.0], [62.6, 44.0], [62.7, 44.0], [62.8, 44.0], [62.9, 44.0], [63.0, 44.0], [63.1, 45.0], [63.2, 45.0], [63.3, 45.0], [63.4, 46.0], [63.5, 47.0], [63.6, 48.0], [63.7, 48.0], [63.8, 48.0], [63.9, 49.0], [64.0, 49.0], [64.1, 50.0], [64.2, 52.0], [64.3, 54.0], [64.4, 56.0], [64.5, 57.0], [64.6, 58.0], [64.7, 58.0], [64.8, 58.0], [64.9, 62.0], [65.0, 64.0], [65.1, 65.0], [65.2, 68.0], [65.3, 74.0], [65.4, 322.0], [65.5, 322.0], [65.6, 322.0], [65.7, 322.0], [65.8, 324.0], [65.9, 324.0], [66.0, 325.0], [66.1, 328.0], [66.2, 332.0], [66.3, 333.0], [66.4, 334.0], [66.5, 334.0], [66.6, 334.0], [66.7, 335.0], [66.8, 336.0], [66.9, 336.0], [67.0, 337.0], [67.1, 337.0], [67.2, 337.0], [67.3, 338.0], [67.4, 338.0], [67.5, 338.0], [67.6, 338.0], [67.7, 338.0], [67.8, 339.0], [67.9, 339.0], [68.0, 339.0], [68.1, 339.0], [68.2, 339.0], [68.3, 339.0], [68.4, 339.0], [68.5, 339.0], [68.6, 339.0], [68.7, 339.0], [68.8, 340.0], [68.9, 340.0], [69.0, 340.0], [69.1, 341.0], [69.2, 341.0], [69.3, 341.0], [69.4, 341.0], [69.5, 342.0], [69.6, 342.0], [69.7, 342.0], [69.8, 342.0], [69.9, 342.0], [70.0, 342.0], [70.1, 342.0], [70.2, 342.0], [70.3, 342.0], [70.4, 342.0], [70.5, 343.0], [70.6, 343.0], [70.7, 343.0], [70.8, 343.0], [70.9, 343.0], [71.0, 343.0], [71.1, 343.0], [71.2, 344.0], [71.3, 344.0], [71.4, 344.0], [71.5, 344.0], [71.6, 344.0], [71.7, 344.0], [71.8, 344.0], [71.9, 344.0], [72.0, 344.0], [72.1, 344.0], [72.2, 344.0], [72.3, 345.0], [72.4, 345.0], [72.5, 345.0], [72.6, 345.0], [72.7, 345.0], [72.8, 345.0], [72.9, 345.0], [73.0, 346.0], [73.1, 346.0], [73.2, 346.0], [73.3, 347.0], [73.4, 347.0], [73.5, 347.0], [73.6, 347.0], [73.7, 347.0], [73.8, 348.0], [73.9, 348.0], [74.0, 348.0], [74.1, 348.0], [74.2, 348.0], [74.3, 348.0], [74.4, 351.0], [74.5, 365.0], [74.6, 367.0], [74.7, 367.0], [74.8, 367.0], [74.9, 367.0], [75.0, 367.0], [75.1, 367.0], [75.2, 367.0], [75.3, 367.0], [75.4, 367.0], [75.5, 368.0], [75.6, 368.0], [75.7, 368.0], [75.8, 369.0], [75.9, 369.0], [76.0, 369.0], [76.1, 369.0], [76.2, 369.0], [76.3, 371.0], [76.4, 371.0], [76.5, 371.0], [76.6, 371.0], [76.7, 371.0], [76.8, 371.0], [76.9, 372.0], [77.0, 372.0], [77.1, 372.0], [77.2, 372.0], [77.3, 372.0], [77.4, 372.0], [77.5, 372.0], [77.6, 372.0], [77.7, 372.0], [77.8, 373.0], [77.9, 373.0], [78.0, 373.0], [78.1, 373.0], [78.2, 373.0], [78.3, 373.0], [78.4, 373.0], [78.5, 373.0], [78.6, 373.0], [78.7, 373.0], [78.8, 373.0], [78.9, 373.0], [79.0, 373.0], [79.1, 373.0], [79.2, 373.0], [79.3, 373.0], [79.4, 374.0], [79.5, 374.0], [79.6, 374.0], [79.7, 374.0], [79.8, 374.0], [79.9, 374.0], [80.0, 374.0], [80.1, 374.0], [80.2, 374.0], [80.3, 375.0], [80.4, 375.0], [80.5, 375.0], [80.6, 376.0], [80.7, 377.0], [80.8, 378.0], [80.9, 378.0], [81.0, 378.0], [81.1, 379.0], [81.2, 379.0], [81.3, 380.0], [81.4, 380.0], [81.5, 381.0], [81.6, 381.0], [81.7, 381.0], [81.8, 381.0], [81.9, 383.0], [82.0, 387.0], [82.1, 387.0], [82.2, 390.0], [82.3, 401.0], [82.4, 402.0], [82.5, 402.0], [82.6, 402.0], [82.7, 402.0], [82.8, 402.0], [82.9, 402.0], [83.0, 402.0], [83.1, 403.0], [83.2, 403.0], [83.3, 403.0], [83.4, 405.0], [83.5, 405.0], [83.6, 406.0], [83.7, 407.0], [83.8, 408.0], [83.9, 409.0], [84.0, 413.0], [84.1, 414.0], [84.2, 422.0], [84.3, 435.0], [84.4, 436.0], [84.5, 436.0], [84.6, 436.0], [84.7, 437.0], [84.8, 437.0], [84.9, 438.0], [85.0, 438.0], [85.1, 438.0], [85.2, 438.0], [85.3, 446.0], [85.4, 450.0], [85.5, 451.0], [85.6, 455.0], [85.7, 475.0], [85.8, 479.0], [85.9, 480.0], [86.0, 481.0], [86.1, 488.0], [86.2, 489.0], [86.3, 489.0], [86.4, 489.0], [86.5, 490.0], [86.6, 490.0], [86.7, 490.0], [86.8, 491.0], [86.9, 491.0], [87.0, 491.0], [87.1, 491.0], [87.2, 491.0], [87.3, 491.0], [87.4, 492.0], [87.5, 492.0], [87.6, 492.0], [87.7, 493.0], [87.8, 493.0], [87.9, 494.0], [88.0, 495.0], [88.1, 495.0], [88.2, 495.0], [88.3, 495.0], [88.4, 495.0], [88.5, 495.0], [88.6, 495.0], [88.7, 496.0], [88.8, 498.0], [88.9, 499.0], [89.0, 499.0], [89.1, 499.0], [89.2, 500.0], [89.3, 500.0], [89.4, 500.0], [89.5, 500.0], [89.6, 501.0], [89.7, 502.0], [89.8, 502.0], [89.9, 502.0], [90.0, 503.0], [90.1, 503.0], [90.2, 503.0], [90.3, 504.0], [90.4, 504.0], [90.5, 513.0], [90.6, 517.0], [90.7, 517.0], [90.8, 518.0], [90.9, 519.0], [91.0, 519.0], [91.1, 519.0], [91.2, 519.0], [91.3, 520.0], [91.4, 520.0], [91.5, 520.0], [91.6, 521.0], [91.7, 521.0], [91.8, 521.0], [91.9, 521.0], [92.0, 521.0], [92.1, 522.0], [92.2, 525.0], [92.3, 532.0], [92.4, 540.0], [92.5, 571.0], [92.6, 572.0], [92.7, 572.0], [92.8, 572.0], [92.9, 572.0], [93.0, 573.0], [93.1, 573.0], [93.2, 573.0], [93.3, 574.0], [93.4, 574.0], [93.5, 574.0], [93.6, 575.0], [93.7, 577.0], [93.8, 577.0], [93.9, 589.0], [94.0, 690.0], [94.1, 692.0], [94.2, 693.0], [94.3, 699.0], [94.4, 700.0], [94.5, 701.0], [94.6, 703.0], [94.7, 703.0], [94.8, 704.0], [94.9, 709.0], [95.0, 711.0], [95.1, 712.0], [95.2, 714.0], [95.3, 751.0], [95.4, 842.0], [95.5, 849.0], [95.6, 850.0], [95.7, 851.0], [95.8, 867.0], [95.9, 927.0], [96.0, 928.0], [96.1, 937.0], [96.2, 954.0], [96.3, 955.0], [96.4, 956.0], [96.5, 956.0], [96.6, 957.0], [96.7, 957.0], [96.8, 957.0], [96.9, 957.0], [97.0, 957.0], [97.1, 958.0], [97.2, 958.0], [97.3, 963.0], [97.4, 966.0], [97.5, 966.0], [97.6, 966.0], [97.7, 967.0], [97.8, 967.0], [97.9, 991.0], [98.0, 992.0], [98.1, 999.0], [98.2, 999.0], [98.3, 999.0], [98.4, 999.0], [98.5, 999.0], [98.6, 999.0], [98.7, 999.0], [98.8, 1000.0], [98.9, 1000.0], [99.0, 1000.0], [99.1, 1001.0], [99.2, 1001.0], [99.3, 1002.0], [99.4, 1003.0], [99.5, 1191.0], [99.6, 1191.0], [99.7, 1197.0], [99.8, 1197.0], [99.9, 1198.0]], "isOverall": false, "label": "Get_By_Id", "isController": false}, {"data": [[0.0, 0.0], [0.1, 0.0], [0.2, 0.0], [0.3, 0.0], [0.4, 0.0], [0.5, 0.0], [0.6, 0.0], [0.7, 0.0], [0.8, 0.0], [0.9, 0.0], [1.0, 0.0], [1.1, 0.0], [1.2, 0.0], [1.3, 0.0], [1.4, 0.0], [1.5, 0.0], [1.6, 0.0], [1.7, 0.0], [1.8, 0.0], [1.9, 0.0], [2.0, 0.0], [2.1, 0.0], [2.2, 0.0], [2.3, 0.0], [2.4, 0.0], [2.5, 0.0], [2.6, 0.0], [2.7, 0.0], [2.8, 0.0], [2.9, 0.0], [3.0, 0.0], [3.1, 0.0], [3.2, 0.0], [3.3, 0.0], [3.4, 0.0], [3.5, 0.0], [3.6, 0.0], [3.7, 0.0], [3.8, 0.0], [3.9, 0.0], [4.0, 0.0], [4.1, 0.0], [4.2, 0.0], [4.3, 0.0], [4.4, 0.0], [4.5, 0.0], [4.6, 0.0], [4.7, 0.0], [4.8, 0.0], [4.9, 0.0], [5.0, 0.0], [5.1, 0.0], [5.2, 0.0], [5.3, 0.0], [5.4, 0.0], [5.5, 0.0], [5.6, 0.0], [5.7, 0.0], [5.8, 0.0], [5.9, 0.0], [6.0, 0.0], [6.1, 0.0], [6.2, 0.0], [6.3, 0.0], [6.4, 0.0], [6.5, 1.0], [6.6, 1.0], [6.7, 1.0], [6.8, 1.0], [6.9, 1.0], [7.0, 1.0], [7.1, 1.0], [7.2, 1.0], [7.3, 1.0], [7.4, 1.0], [7.5, 1.0], [7.6, 1.0], [7.7, 1.0], [7.8, 1.0], [7.9, 1.0], [8.0, 1.0], [8.1, 1.0], [8.2, 1.0], [8.3, 1.0], [8.4, 1.0], [8.5, 1.0], [8.6, 1.0], [8.7, 1.0], [8.8, 1.0], [8.9, 1.0], [9.0, 1.0], [9.1, 1.0], [9.2, 1.0], [9.3, 1.0], [9.4, 1.0], [9.5, 1.0], [9.6, 1.0], [9.7, 1.0], [9.8, 1.0], [9.9, 1.0], [10.0, 1.0], [10.1, 1.0], [10.2, 1.0], [10.3, 1.0], [10.4, 1.0], [10.5, 1.0], [10.6, 1.0], [10.7, 1.0], [10.8, 1.0], [10.9, 1.0], [11.0, 1.0], [11.1, 1.0], [11.2, 1.0], [11.3, 1.0], [11.4, 1.0], [11.5, 1.0], [11.6, 1.0], [11.7, 1.0], [11.8, 1.0], [11.9, 1.0], [12.0, 1.0], [12.1, 1.0], [12.2, 1.0], [12.3, 1.0], [12.4, 1.0], [12.5, 1.0], [12.6, 1.0], [12.7, 1.0], [12.8, 1.0], [12.9, 1.0], [13.0, 1.0], [13.1, 1.0], [13.2, 1.0], [13.3, 1.0], [13.4, 1.0], [13.5, 1.0], [13.6, 1.0], [13.7, 1.0], [13.8, 1.0], [13.9, 1.0], [14.0, 1.0], [14.1, 1.0], [14.2, 1.0], [14.3, 1.0], [14.4, 1.0], [14.5, 1.0], [14.6, 1.0], [14.7, 1.0], [14.8, 1.0], [14.9, 1.0], [15.0, 1.0], [15.1, 1.0], [15.2, 1.0], [15.3, 1.0], [15.4, 1.0], [15.5, 1.0], [15.6, 1.0], [15.7, 1.0], [15.8, 1.0], [15.9, 1.0], [16.0, 1.0], [16.1, 1.0], [16.2, 1.0], [16.3, 1.0], [16.4, 1.0], [16.5, 1.0], [16.6, 1.0], [16.7, 1.0], [16.8, 1.0], [16.9, 1.0], [17.0, 1.0], [17.1, 1.0], [17.2, 1.0], [17.3, 1.0], [17.4, 1.0], [17.5, 1.0], [17.6, 1.0], [17.7, 1.0], [17.8, 1.0], [17.9, 1.0], [18.0, 1.0], [18.1, 1.0], [18.2, 1.0], [18.3, 1.0], [18.4, 1.0], [18.5, 1.0], [18.6, 1.0], [18.7, 1.0], [18.8, 1.0], [18.9, 1.0], [19.0, 1.0], [19.1, 1.0], [19.2, 1.0], [19.3, 1.0], [19.4, 1.0], [19.5, 1.0], [19.6, 1.0], [19.7, 1.0], [19.8, 1.0], [19.9, 1.0], [20.0, 1.0], [20.1, 1.0], [20.2, 1.0], [20.3, 1.0], [20.4, 1.0], [20.5, 1.0], [20.6, 1.0], [20.7, 1.0], [20.8, 1.0], [20.9, 1.0], [21.0, 1.0], [21.1, 1.0], [21.2, 1.0], [21.3, 1.0], [21.4, 1.0], [21.5, 1.0], [21.6, 1.0], [21.7, 1.0], [21.8, 1.0], [21.9, 1.0], [22.0, 1.0], [22.1, 1.0], [22.2, 1.0], [22.3, 1.0], [22.4, 1.0], [22.5, 1.0], [22.6, 1.0], [22.7, 1.0], [22.8, 1.0], [22.9, 1.0], [23.0, 1.0], [23.1, 1.0], [23.2, 1.0], [23.3, 1.0], [23.4, 1.0], [23.5, 1.0], [23.6, 1.0], [23.7, 1.0], [23.8, 1.0], [23.9, 1.0], [24.0, 1.0], [24.1, 1.0], [24.2, 1.0], [24.3, 1.0], [24.4, 1.0], [24.5, 1.0], [24.6, 1.0], [24.7, 1.0], [24.8, 1.0], [24.9, 1.0], [25.0, 1.0], [25.1, 1.0], [25.2, 1.0], [25.3, 1.0], [25.4, 1.0], [25.5, 1.0], [25.6, 1.0], [25.7, 1.0], [25.8, 1.0], [25.9, 1.0], [26.0, 1.0], [26.1, 1.0], [26.2, 1.0], [26.3, 1.0], [26.4, 1.0], [26.5, 1.0], [26.6, 1.0], [26.7, 1.0], [26.8, 1.0], [26.9, 1.0], [27.0, 1.0], [27.1, 1.0], [27.2, 1.0], [27.3, 1.0], [27.4, 1.0], [27.5, 1.0], [27.6, 1.0], [27.7, 1.0], [27.8, 1.0], [27.9, 1.0], [28.0, 1.0], [28.1, 1.0], [28.2, 1.0], [28.3, 1.0], [28.4, 1.0], [28.5, 1.0], [28.6, 1.0], [28.7, 1.0], [28.8, 1.0], [28.9, 1.0], [29.0, 1.0], [29.1, 1.0], [29.2, 1.0], [29.3, 1.0], [29.4, 1.0], [29.5, 1.0], [29.6, 1.0], [29.7, 1.0], [29.8, 1.0], [29.9, 1.0], [30.0, 1.0], [30.1, 1.0], [30.2, 1.0], [30.3, 1.0], [30.4, 1.0], [30.5, 1.0], [30.6, 1.0], [30.7, 1.0], [30.8, 1.0], [30.9, 1.0], [31.0, 1.0], [31.1, 1.0], [31.2, 1.0], [31.3, 1.0], [31.4, 1.0], [31.5, 1.0], [31.6, 1.0], [31.7, 1.0], [31.8, 1.0], [31.9, 1.0], [32.0, 1.0], [32.1, 1.0], [32.2, 1.0], [32.3, 1.0], [32.4, 1.0], [32.5, 1.0], [32.6, 1.0], [32.7, 1.0], [32.8, 1.0], [32.9, 1.0], [33.0, 1.0], [33.1, 1.0], [33.2, 1.0], [33.3, 1.0], [33.4, 1.0], [33.5, 1.0], [33.6, 1.0], [33.7, 1.0], [33.8, 1.0], [33.9, 1.0], [34.0, 1.0], [34.1, 1.0], [34.2, 1.0], [34.3, 1.0], [34.4, 1.0], [34.5, 1.0], [34.6, 1.0], [34.7, 1.0], [34.8, 1.0], [34.9, 1.0], [35.0, 1.0], [35.1, 1.0], [35.2, 1.0], [35.3, 1.0], [35.4, 1.0], [35.5, 1.0], [35.6, 1.0], [35.7, 1.0], [35.8, 1.0], [35.9, 1.0], [36.0, 1.0], [36.1, 1.0], [36.2, 1.0], [36.3, 1.0], [36.4, 1.0], [36.5, 1.0], [36.6, 1.0], [36.7, 1.0], [36.8, 1.0], [36.9, 1.0], [37.0, 1.0], [37.1, 1.0], [37.2, 1.0], [37.3, 1.0], [37.4, 1.0], [37.5, 1.0], [37.6, 1.0], [37.7, 1.0], [37.8, 1.0], [37.9, 1.0], [38.0, 1.0], [38.1, 1.0], [38.2, 1.0], [38.3, 1.0], [38.4, 1.0], [38.5, 1.0], [38.6, 1.0], [38.7, 1.0], [38.8, 1.0], [38.9, 1.0], [39.0, 1.0], [39.1, 1.0], [39.2, 1.0], [39.3, 1.0], [39.4, 1.0], [39.5, 1.0], [39.6, 1.0], [39.7, 1.0], [39.8, 1.0], [39.9, 1.0], [40.0, 1.0], [40.1, 1.0], [40.2, 1.0], [40.3, 1.0], [40.4, 1.0], [40.5, 1.0], [40.6, 1.0], [40.7, 1.0], [40.8, 1.0], [40.9, 1.0], [41.0, 1.0], [41.1, 1.0], [41.2, 1.0], [41.3, 1.0], [41.4, 1.0], [41.5, 1.0], [41.6, 1.0], [41.7, 1.0], [41.8, 1.0], [41.9, 1.0], [42.0, 1.0], [42.1, 1.0], [42.2, 1.0], [42.3, 1.0], [42.4, 1.0], [42.5, 1.0], [42.6, 1.0], [42.7, 1.0], [42.8, 2.0], [42.9, 2.0], [43.0, 2.0], [43.1, 2.0], [43.2, 2.0], [43.3, 2.0], [43.4, 2.0], [43.5, 2.0], [43.6, 2.0], [43.7, 2.0], [43.8, 2.0], [43.9, 2.0], [44.0, 2.0], [44.1, 2.0], [44.2, 2.0], [44.3, 2.0], [44.4, 2.0], [44.5, 2.0], [44.6, 2.0], [44.7, 2.0], [44.8, 2.0], [44.9, 2.0], [45.0, 2.0], [45.1, 2.0], [45.2, 2.0], [45.3, 2.0], [45.4, 2.0], [45.5, 2.0], [45.6, 2.0], [45.7, 2.0], [45.8, 2.0], [45.9, 2.0], [46.0, 2.0], [46.1, 2.0], [46.2, 2.0], [46.3, 2.0], [46.4, 2.0], [46.5, 2.0], [46.6, 2.0], [46.7, 2.0], [46.8, 2.0], [46.9, 2.0], [47.0, 2.0], [47.1, 2.0], [47.2, 2.0], [47.3, 2.0], [47.4, 2.0], [47.5, 2.0], [47.6, 2.0], [47.7, 2.0], [47.8, 3.0], [47.9, 3.0], [48.0, 3.0], [48.1, 3.0], [48.2, 3.0], [48.3, 3.0], [48.4, 3.0], [48.5, 4.0], [48.6, 4.0], [48.7, 5.0], [48.8, 5.0], [48.9, 6.0], [49.0, 6.0], [49.1, 8.0], [49.2, 10.0], [49.3, 10.0], [49.4, 12.0], [49.5, 13.0], [49.6, 14.0], [49.7, 17.0], [49.8, 17.0], [49.9, 19.0], [50.0, 25.0], [50.1, 26.0], [50.2, 27.0], [50.3, 29.0], [50.4, 29.0], [50.5, 30.0], [50.6, 31.0], [50.7, 31.0], [50.8, 32.0], [50.9, 32.0], [51.0, 32.0], [51.1, 33.0], [51.2, 33.0], [51.3, 33.0], [51.4, 33.0], [51.5, 33.0], [51.6, 33.0], [51.7, 34.0], [51.8, 34.0], [51.9, 34.0], [52.0, 34.0], [52.1, 34.0], [52.2, 35.0], [52.3, 35.0], [52.4, 35.0], [52.5, 35.0], [52.6, 36.0], [52.7, 36.0], [52.8, 36.0], [52.9, 36.0], [53.0, 36.0], [53.1, 36.0], [53.2, 37.0], [53.3, 37.0], [53.4, 37.0], [53.5, 37.0], [53.6, 37.0], [53.7, 37.0], [53.8, 37.0], [53.9, 38.0], [54.0, 38.0], [54.1, 38.0], [54.2, 38.0], [54.3, 38.0], [54.4, 38.0], [54.5, 38.0], [54.6, 38.0], [54.7, 39.0], [54.8, 39.0], [54.9, 39.0], [55.0, 39.0], [55.1, 39.0], [55.2, 39.0], [55.3, 40.0], [55.4, 40.0], [55.5, 40.0], [55.6, 40.0], [55.7, 40.0], [55.8, 40.0], [55.9, 41.0], [56.0, 41.0], [56.1, 41.0], [56.2, 41.0], [56.3, 41.0], [56.4, 41.0], [56.5, 41.0], [56.6, 41.0], [56.7, 42.0], [56.8, 42.0], [56.9, 42.0], [57.0, 42.0], [57.1, 43.0], [57.2, 43.0], [57.3, 43.0], [57.4, 43.0], [57.5, 44.0], [57.6, 44.0], [57.7, 44.0], [57.8, 44.0], [57.9, 44.0], [58.0, 45.0], [58.1, 45.0], [58.2, 45.0], [58.3, 45.0], [58.4, 45.0], [58.5, 45.0], [58.6, 45.0], [58.7, 46.0], [58.8, 46.0], [58.9, 46.0], [59.0, 46.0], [59.1, 46.0], [59.2, 46.0], [59.3, 46.0], [59.4, 47.0], [59.5, 47.0], [59.6, 47.0], [59.7, 47.0], [59.8, 48.0], [59.9, 48.0], [60.0, 48.0], [60.1, 48.0], [60.2, 48.0], [60.3, 48.0], [60.4, 49.0], [60.5, 49.0], [60.6, 49.0], [60.7, 49.0], [60.8, 50.0], [60.9, 50.0], [61.0, 50.0], [61.1, 51.0], [61.2, 51.0], [61.3, 51.0], [61.4, 51.0], [61.5, 52.0], [61.6, 52.0], [61.7, 52.0], [61.8, 52.0], [61.9, 53.0], [62.0, 53.0], [62.1, 53.0], [62.2, 54.0], [62.3, 54.0], [62.4, 56.0], [62.5, 57.0], [62.6, 57.0], [62.7, 57.0], [62.8, 58.0], [62.9, 58.0], [63.0, 59.0], [63.1, 59.0], [63.2, 59.0], [63.3, 60.0], [63.4, 60.0], [63.5, 60.0], [63.6, 61.0], [63.7, 61.0], [63.8, 61.0], [63.9, 62.0], [64.0, 62.0], [64.1, 63.0], [64.2, 63.0], [64.3, 64.0], [64.4, 64.0], [64.5, 64.0], [64.6, 65.0], [64.7, 66.0], [64.8, 67.0], [64.9, 69.0], [65.0, 76.0], [65.1, 101.0], [65.2, 152.0], [65.3, 250.0], [65.4, 251.0], [65.5, 252.0], [65.6, 310.0], [65.7, 310.0], [65.8, 317.0], [65.9, 322.0], [66.0, 324.0], [66.1, 325.0], [66.2, 331.0], [66.3, 332.0], [66.4, 332.0], [66.5, 332.0], [66.6, 332.0], [66.7, 333.0], [66.8, 333.0], [66.9, 333.0], [67.0, 333.0], [67.1, 333.0], [67.2, 333.0], [67.3, 333.0], [67.4, 333.0], [67.5, 333.0], [67.6, 333.0], [67.7, 334.0], [67.8, 336.0], [67.9, 336.0], [68.0, 338.0], [68.1, 338.0], [68.2, 338.0], [68.3, 339.0], [68.4, 339.0], [68.5, 339.0], [68.6, 339.0], [68.7, 339.0], [68.8, 339.0], [68.9, 339.0], [69.0, 339.0], [69.1, 339.0], [69.2, 339.0], [69.3, 340.0], [69.4, 340.0], [69.5, 345.0], [69.6, 347.0], [69.7, 348.0], [69.8, 349.0], [69.9, 349.0], [70.0, 349.0], [70.1, 349.0], [70.2, 349.0], [70.3, 349.0], [70.4, 350.0], [70.5, 350.0], [70.6, 350.0], [70.7, 350.0], [70.8, 350.0], [70.9, 351.0], [71.0, 351.0], [71.1, 352.0], [71.2, 356.0], [71.3, 356.0], [71.4, 357.0], [71.5, 357.0], [71.6, 357.0], [71.7, 357.0], [71.8, 358.0], [71.9, 358.0], [72.0, 359.0], [72.1, 359.0], [72.2, 360.0], [72.3, 361.0], [72.4, 361.0], [72.5, 361.0], [72.6, 361.0], [72.7, 362.0], [72.8, 362.0], [72.9, 362.0], [73.0, 362.0], [73.1, 362.0], [73.2, 362.0], [73.3, 362.0], [73.4, 362.0], [73.5, 362.0], [73.6, 363.0], [73.7, 369.0], [73.8, 369.0], [73.9, 370.0], [74.0, 370.0], [74.1, 370.0], [74.2, 371.0], [74.3, 371.0], [74.4, 371.0], [74.5, 372.0], [74.6, 372.0], [74.7, 373.0], [74.8, 373.0], [74.9, 373.0], [75.0, 373.0], [75.1, 373.0], [75.2, 373.0], [75.3, 373.0], [75.4, 373.0], [75.5, 373.0], [75.6, 373.0], [75.7, 374.0], [75.8, 374.0], [75.9, 374.0], [76.0, 375.0], [76.1, 380.0], [76.2, 381.0], [76.3, 382.0], [76.4, 383.0], [76.5, 383.0], [76.6, 387.0], [76.7, 387.0], [76.8, 388.0], [76.9, 388.0], [77.0, 400.0], [77.1, 404.0], [77.2, 404.0], [77.3, 404.0], [77.4, 405.0], [77.5, 405.0], [77.6, 405.0], [77.7, 405.0], [77.8, 405.0], [77.9, 405.0], [78.0, 405.0], [78.1, 405.0], [78.2, 405.0], [78.3, 406.0], [78.4, 406.0], [78.5, 408.0], [78.6, 409.0], [78.7, 414.0], [78.8, 414.0], [78.9, 414.0], [79.0, 414.0], [79.1, 414.0], [79.2, 415.0], [79.3, 415.0], [79.4, 415.0], [79.5, 415.0], [79.6, 415.0], [79.7, 415.0], [79.8, 416.0], [79.9, 417.0], [80.0, 418.0], [80.1, 418.0], [80.2, 418.0], [80.3, 425.0], [80.4, 434.0], [80.5, 439.0], [80.6, 440.0], [80.7, 440.0], [80.8, 440.0], [80.9, 441.0], [81.0, 441.0], [81.1, 442.0], [81.2, 443.0], [81.3, 443.0], [81.4, 443.0], [81.5, 443.0], [81.6, 443.0], [81.7, 444.0], [81.8, 444.0], [81.9, 445.0], [82.0, 445.0], [82.1, 446.0], [82.2, 447.0], [82.3, 449.0], [82.4, 451.0], [82.5, 451.0], [82.6, 454.0], [82.7, 474.0], [82.8, 474.0], [82.9, 475.0], [83.0, 476.0], [83.1, 477.0], [83.2, 477.0], [83.3, 477.0], [83.4, 477.0], [83.5, 478.0], [83.6, 478.0], [83.7, 478.0], [83.8, 479.0], [83.9, 479.0], [84.0, 479.0], [84.1, 480.0], [84.2, 480.0], [84.3, 480.0], [84.4, 481.0], [84.5, 482.0], [84.6, 482.0], [84.7, 482.0], [84.8, 484.0], [84.9, 484.0], [85.0, 485.0], [85.1, 487.0], [85.2, 490.0], [85.3, 490.0], [85.4, 491.0], [85.5, 491.0], [85.6, 491.0], [85.7, 493.0], [85.8, 493.0], [85.9, 493.0], [86.0, 493.0], [86.1, 493.0], [86.2, 493.0], [86.3, 494.0], [86.4, 494.0], [86.5, 494.0], [86.6, 494.0], [86.7, 494.0], [86.8, 494.0], [86.9, 495.0], [87.0, 495.0], [87.1, 496.0], [87.2, 496.0], [87.3, 496.0], [87.4, 496.0], [87.5, 497.0], [87.6, 497.0], [87.7, 498.0], [87.8, 498.0], [87.9, 498.0], [88.0, 502.0], [88.1, 502.0], [88.2, 503.0], [88.3, 505.0], [88.4, 511.0], [88.5, 512.0], [88.6, 512.0], [88.7, 512.0], [88.8, 513.0], [88.9, 513.0], [89.0, 513.0], [89.1, 513.0], [89.2, 514.0], [89.3, 514.0], [89.4, 515.0], [89.5, 520.0], [89.6, 521.0], [89.7, 522.0], [89.8, 523.0], [89.9, 523.0], [90.0, 523.0], [90.1, 523.0], [90.2, 523.0], [90.3, 524.0], [90.4, 524.0], [90.5, 524.0], [90.6, 525.0], [90.7, 526.0], [90.8, 528.0], [90.9, 528.0], [91.0, 533.0], [91.1, 534.0], [91.2, 534.0], [91.3, 534.0], [91.4, 535.0], [91.5, 535.0], [91.6, 535.0], [91.7, 536.0], [91.8, 536.0], [91.9, 537.0], [92.0, 537.0], [92.1, 537.0], [92.2, 538.0], [92.3, 538.0], [92.4, 538.0], [92.5, 538.0], [92.6, 538.0], [92.7, 538.0], [92.8, 539.0], [92.9, 539.0], [93.0, 539.0], [93.1, 540.0], [93.2, 540.0], [93.3, 540.0], [93.4, 541.0], [93.5, 541.0], [93.6, 542.0], [93.7, 542.0], [93.8, 543.0], [93.9, 543.0], [94.0, 543.0], [94.1, 546.0], [94.2, 549.0], [94.3, 550.0], [94.4, 551.0], [94.5, 556.0], [94.6, 556.0], [94.7, 576.0], [94.8, 577.0], [94.9, 578.0], [95.0, 579.0], [95.1, 579.0], [95.2, 580.0], [95.3, 580.0], [95.4, 581.0], [95.5, 582.0], [95.6, 583.0], [95.7, 588.0], [95.8, 590.0], [95.9, 590.0], [96.0, 673.0], [96.1, 677.0], [96.2, 682.0], [96.3, 684.0], [96.4, 701.0], [96.5, 703.0], [96.6, 704.0], [96.7, 707.0], [96.8, 709.0], [96.9, 709.0], [97.0, 710.0], [97.1, 711.0], [97.2, 712.0], [97.3, 713.0], [97.4, 713.0], [97.5, 715.0], [97.6, 719.0], [97.7, 728.0], [97.8, 928.0], [97.9, 948.0], [98.0, 948.0], [98.1, 949.0], [98.2, 949.0], [98.3, 950.0], [98.4, 951.0], [98.5, 965.0], [98.6, 967.0], [98.7, 981.0], [98.8, 997.0], [98.9, 998.0], [99.0, 998.0], [99.1, 999.0], [99.2, 999.0], [99.3, 999.0], [99.4, 999.0], [99.5, 1000.0], [99.6, 1004.0], [99.7, 1025.0], [99.8, 1026.0], [99.9, 1191.0]], "isOverall": false, "label": "Put_By_Id", "isController": false}, {"data": [[0.0, 0.0], [0.1, 0.0], [0.2, 0.0], [0.3, 0.0], [0.4, 0.0], [0.5, 0.0], [0.6, 0.0], [0.7, 0.0], [0.8, 0.0], [0.9, 0.0], [1.0, 0.0], [1.1, 0.0], [1.2, 0.0], [1.3, 0.0], [1.4, 0.0], [1.5, 0.0], [1.6, 0.0], [1.7, 0.0], [1.8, 0.0], [1.9, 0.0], [2.0, 0.0], [2.1, 0.0], [2.2, 0.0], [2.3, 0.0], [2.4, 0.0], [2.5, 0.0], [2.6, 0.0], [2.7, 0.0], [2.8, 0.0], [2.9, 0.0], [3.0, 0.0], [3.1, 0.0], [3.2, 0.0], [3.3, 0.0], [3.4, 0.0], [3.5, 0.0], [3.6, 0.0], [3.7, 0.0], [3.8, 0.0], [3.9, 0.0], [4.0, 0.0], [4.1, 0.0], [4.2, 0.0], [4.3, 0.0], [4.4, 0.0], [4.5, 0.0], [4.6, 0.0], [4.7, 0.0], [4.8, 0.0], [4.9, 0.0], [5.0, 0.0], [5.1, 0.0], [5.2, 0.0], [5.3, 0.0], [5.4, 0.0], [5.5, 0.0], [5.6, 0.0], [5.7, 0.0], [5.8, 0.0], [5.9, 0.0], [6.0, 0.0], [6.1, 0.0], [6.2, 0.0], [6.3, 0.0], [6.4, 0.0], [6.5, 0.0], [6.6, 0.0], [6.7, 0.0], [6.8, 0.0], [6.9, 0.0], [7.0, 0.0], [7.1, 0.0], [7.2, 0.0], [7.3, 0.0], [7.4, 0.0], [7.5, 0.0], [7.6, 0.0], [7.7, 0.0], [7.8, 0.0], [7.9, 0.0], [8.0, 0.0], [8.1, 0.0], [8.2, 0.0], [8.3, 0.0], [8.4, 0.0], [8.5, 0.0], [8.6, 0.0], [8.7, 0.0], [8.8, 0.0], [8.9, 0.0], [9.0, 0.0], [9.1, 0.0], [9.2, 0.0], [9.3, 0.0], [9.4, 0.0], [9.5, 0.0], [9.6, 0.0], [9.7, 0.0], [9.8, 0.0], [9.9, 0.0], [10.0, 0.0], [10.1, 0.0], [10.2, 0.0], [10.3, 0.0], [10.4, 0.0], [10.5, 0.0], [10.6, 0.0], [10.7, 0.0], [10.8, 0.0], [10.9, 0.0], [11.0, 0.0], [11.1, 0.0], [11.2, 0.0], [11.3, 0.0], [11.4, 0.0], [11.5, 0.0], [11.6, 0.0], [11.7, 0.0], [11.8, 0.0], [11.9, 0.0], [12.0, 0.0], [12.1, 0.0], [12.2, 0.0], [12.3, 1.0], [12.4, 1.0], [12.5, 1.0], [12.6, 1.0], [12.7, 1.0], [12.8, 1.0], [12.9, 1.0], [13.0, 1.0], [13.1, 1.0], [13.2, 1.0], [13.3, 1.0], [13.4, 1.0], [13.5, 1.0], [13.6, 1.0], [13.7, 1.0], [13.8, 1.0], [13.9, 1.0], [14.0, 1.0], [14.1, 1.0], [14.2, 1.0], [14.3, 1.0], [14.4, 1.0], [14.5, 1.0], [14.6, 1.0], [14.7, 1.0], [14.8, 1.0], [14.9, 1.0], [15.0, 1.0], [15.1, 1.0], [15.2, 1.0], [15.3, 1.0], [15.4, 1.0], [15.5, 1.0], [15.6, 1.0], [15.7, 1.0], [15.8, 1.0], [15.9, 1.0], [16.0, 1.0], [16.1, 1.0], [16.2, 1.0], [16.3, 1.0], [16.4, 1.0], [16.5, 1.0], [16.6, 1.0], [16.7, 1.0], [16.8, 1.0], [16.9, 1.0], [17.0, 1.0], [17.1, 1.0], [17.2, 1.0], [17.3, 1.0], [17.4, 1.0], [17.5, 1.0], [17.6, 1.0], [17.7, 1.0], [17.8, 1.0], [17.9, 1.0], [18.0, 1.0], [18.1, 1.0], [18.2, 1.0], [18.3, 1.0], [18.4, 1.0], [18.5, 1.0], [18.6, 1.0], [18.7, 1.0], [18.8, 1.0], [18.9, 1.0], [19.0, 1.0], [19.1, 1.0], [19.2, 1.0], [19.3, 1.0], [19.4, 1.0], [19.5, 1.0], [19.6, 1.0], [19.7, 1.0], [19.8, 1.0], [19.9, 1.0], [20.0, 1.0], [20.1, 1.0], [20.2, 1.0], [20.3, 1.0], [20.4, 1.0], [20.5, 1.0], [20.6, 1.0], [20.7, 1.0], [20.8, 1.0], [20.9, 1.0], [21.0, 1.0], [21.1, 1.0], [21.2, 1.0], [21.3, 1.0], [21.4, 1.0], [21.5, 1.0], [21.6, 1.0], [21.7, 1.0], [21.8, 1.0], [21.9, 1.0], [22.0, 1.0], [22.1, 1.0], [22.2, 1.0], [22.3, 1.0], [22.4, 1.0], [22.5, 1.0], [22.6, 1.0], [22.7, 1.0], [22.8, 1.0], [22.9, 1.0], [23.0, 1.0], [23.1, 1.0], [23.2, 1.0], [23.3, 1.0], [23.4, 1.0], [23.5, 1.0], [23.6, 1.0], [23.7, 1.0], [23.8, 1.0], [23.9, 1.0], [24.0, 1.0], [24.1, 1.0], [24.2, 1.0], [24.3, 1.0], [24.4, 1.0], [24.5, 1.0], [24.6, 1.0], [24.7, 1.0], [24.8, 1.0], [24.9, 1.0], [25.0, 1.0], [25.1, 1.0], [25.2, 1.0], [25.3, 1.0], [25.4, 1.0], [25.5, 1.0], [25.6, 1.0], [25.7, 1.0], [25.8, 1.0], [25.9, 1.0], [26.0, 1.0], [26.1, 1.0], [26.2, 1.0], [26.3, 1.0], [26.4, 1.0], [26.5, 1.0], [26.6, 1.0], [26.7, 1.0], [26.8, 1.0], [26.9, 1.0], [27.0, 1.0], [27.1, 1.0], [27.2, 1.0], [27.3, 1.0], [27.4, 1.0], [27.5, 1.0], [27.6, 1.0], [27.7, 1.0], [27.8, 1.0], [27.9, 1.0], [28.0, 1.0], [28.1, 1.0], [28.2, 1.0], [28.3, 1.0], [28.4, 1.0], [28.5, 1.0], [28.6, 1.0], [28.7, 1.0], [28.8, 1.0], [28.9, 1.0], [29.0, 1.0], [29.1, 1.0], [29.2, 1.0], [29.3, 1.0], [29.4, 1.0], [29.5, 1.0], [29.6, 1.0], [29.7, 1.0], [29.8, 1.0], [29.9, 1.0], [30.0, 1.0], [30.1, 1.0], [30.2, 1.0], [30.3, 1.0], [30.4, 1.0], [30.5, 1.0], [30.6, 1.0], [30.7, 1.0], [30.8, 1.0], [30.9, 1.0], [31.0, 1.0], [31.1, 1.0], [31.2, 1.0], [31.3, 1.0], [31.4, 1.0], [31.5, 1.0], [31.6, 1.0], [31.7, 1.0], [31.8, 1.0], [31.9, 1.0], [32.0, 1.0], [32.1, 1.0], [32.2, 1.0], [32.3, 1.0], [32.4, 1.0], [32.5, 1.0], [32.6, 1.0], [32.7, 1.0], [32.8, 1.0], [32.9, 1.0], [33.0, 1.0], [33.1, 1.0], [33.2, 1.0], [33.3, 1.0], [33.4, 1.0], [33.5, 1.0], [33.6, 1.0], [33.7, 1.0], [33.8, 1.0], [33.9, 1.0], [34.0, 1.0], [34.1, 1.0], [34.2, 1.0], [34.3, 1.0], [34.4, 1.0], [34.5, 1.0], [34.6, 1.0], [34.7, 1.0], [34.8, 1.0], [34.9, 1.0], [35.0, 1.0], [35.1, 1.0], [35.2, 1.0], [35.3, 1.0], [35.4, 1.0], [35.5, 1.0], [35.6, 1.0], [35.7, 1.0], [35.8, 1.0], [35.9, 1.0], [36.0, 1.0], [36.1, 1.0], [36.2, 1.0], [36.3, 1.0], [36.4, 1.0], [36.5, 1.0], [36.6, 1.0], [36.7, 1.0], [36.8, 1.0], [36.9, 1.0], [37.0, 1.0], [37.1, 1.0], [37.2, 1.0], [37.3, 1.0], [37.4, 1.0], [37.5, 1.0], [37.6, 1.0], [37.7, 1.0], [37.8, 1.0], [37.9, 1.0], [38.0, 1.0], [38.1, 1.0], [38.2, 1.0], [38.3, 1.0], [38.4, 1.0], [38.5, 1.0], [38.6, 1.0], [38.7, 1.0], [38.8, 1.0], [38.9, 1.0], [39.0, 1.0], [39.1, 1.0], [39.2, 1.0], [39.3, 1.0], [39.4, 1.0], [39.5, 1.0], [39.6, 1.0], [39.7, 1.0], [39.8, 1.0], [39.9, 1.0], [40.0, 1.0], [40.1, 1.0], [40.2, 1.0], [40.3, 1.0], [40.4, 1.0], [40.5, 1.0], [40.6, 1.0], [40.7, 1.0], [40.8, 1.0], [40.9, 1.0], [41.0, 1.0], [41.1, 1.0], [41.2, 1.0], [41.3, 1.0], [41.4, 1.0], [41.5, 1.0], [41.6, 1.0], [41.7, 1.0], [41.8, 1.0], [41.9, 1.0], [42.0, 1.0], [42.1, 1.0], [42.2, 1.0], [42.3, 1.0], [42.4, 1.0], [42.5, 1.0], [42.6, 1.0], [42.7, 1.0], [42.8, 1.0], [42.9, 1.0], [43.0, 1.0], [43.1, 1.0], [43.2, 1.0], [43.3, 1.0], [43.4, 1.0], [43.5, 1.0], [43.6, 1.0], [43.7, 1.0], [43.8, 1.0], [43.9, 1.0], [44.0, 1.0], [44.1, 1.0], [44.2, 1.0], [44.3, 1.0], [44.4, 1.0], [44.5, 1.0], [44.6, 1.0], [44.7, 1.0], [44.8, 1.0], [44.9, 1.0], [45.0, 1.0], [45.1, 1.0], [45.2, 1.0], [45.3, 1.0], [45.4, 1.0], [45.5, 1.0], [45.6, 1.0], [45.7, 1.0], [45.8, 1.0], [45.9, 1.0], [46.0, 1.0], [46.1, 1.0], [46.2, 1.0], [46.3, 1.0], [46.4, 1.0], [46.5, 1.0], [46.6, 1.0], [46.7, 1.0], [46.8, 1.0], [46.9, 1.0], [47.0, 1.0], [47.1, 1.0], [47.2, 1.0], [47.3, 1.0], [47.4, 1.0], [47.5, 1.0], [47.6, 1.0], [47.7, 1.0], [47.8, 1.0], [47.9, 1.0], [48.0, 1.0], [48.1, 1.0], [48.2, 1.0], [48.3, 1.0], [48.4, 1.0], [48.5, 1.0], [48.6, 1.0], [48.7, 1.0], [48.8, 1.0], [48.9, 1.0], [49.0, 1.0], [49.1, 1.0], [49.2, 1.0], [49.3, 1.0], [49.4, 1.0], [49.5, 1.0], [49.6, 1.0], [49.7, 1.0], [49.8, 1.0], [49.9, 1.0], [50.0, 1.0], [50.1, 1.0], [50.2, 1.0], [50.3, 1.0], [50.4, 1.0], [50.5, 1.0], [50.6, 1.0], [50.7, 1.0], [50.8, 1.0], [50.9, 1.0], [51.0, 1.0], [51.1, 1.0], [51.2, 1.0], [51.3, 1.0], [51.4, 1.0], [51.5, 1.0], [51.6, 1.0], [51.7, 1.0], [51.8, 1.0], [51.9, 1.0], [52.0, 1.0], [52.1, 1.0], [52.2, 1.0], [52.3, 1.0], [52.4, 1.0], [52.5, 1.0], [52.6, 1.0], [52.7, 1.0], [52.8, 1.0], [52.9, 1.0], [53.0, 1.0], [53.1, 1.0], [53.2, 1.0], [53.3, 1.0], [53.4, 1.0], [53.5, 1.0], [53.6, 1.0], [53.7, 1.0], [53.8, 1.0], [53.9, 1.0], [54.0, 1.0], [54.1, 1.0], [54.2, 1.0], [54.3, 1.0], [54.4, 1.0], [54.5, 1.0], [54.6, 1.0], [54.7, 1.0], [54.8, 1.0], [54.9, 1.0], [55.0, 1.0], [55.1, 1.0], [55.2, 1.0], [55.3, 1.0], [55.4, 1.0], [55.5, 1.0], [55.6, 1.0], [55.7, 1.0], [55.8, 1.0], [55.9, 1.0], [56.0, 1.0], [56.1, 1.0], [56.2, 1.0], [56.3, 1.0], [56.4, 1.0], [56.5, 2.0], [56.6, 2.0], [56.7, 2.0], [56.8, 2.0], [56.9, 2.0], [57.0, 2.0], [57.1, 2.0], [57.2, 2.0], [57.3, 2.0], [57.4, 2.0], [57.5, 2.0], [57.6, 2.0], [57.7, 2.0], [57.8, 2.0], [57.9, 2.0], [58.0, 2.0], [58.1, 2.0], [58.2, 2.0], [58.3, 2.0], [58.4, 2.0], [58.5, 2.0], [58.6, 2.0], [58.7, 2.0], [58.8, 2.0], [58.9, 2.0], [59.0, 2.0], [59.1, 2.0], [59.2, 3.0], [59.3, 3.0], [59.4, 4.0], [59.5, 18.0], [59.6, 22.0], [59.7, 27.0], [59.8, 29.0], [59.9, 40.0], [60.0, 46.0], [60.1, 49.0], [60.2, 52.0], [60.3, 53.0], [60.4, 61.0], [60.5, 66.0], [60.6, 68.0], [60.7, 81.0], [60.8, 108.0], [60.9, 109.0], [61.0, 110.0], [61.1, 111.0], [61.2, 111.0], [61.3, 112.0], [61.4, 112.0], [61.5, 113.0], [61.6, 113.0], [61.7, 114.0], [61.8, 114.0], [61.9, 114.0], [62.0, 115.0], [62.1, 115.0], [62.2, 115.0], [62.3, 116.0], [62.4, 117.0], [62.5, 118.0], [62.6, 120.0], [62.7, 120.0], [62.8, 121.0], [62.9, 122.0], [63.0, 122.0], [63.1, 123.0], [63.2, 123.0], [63.3, 123.0], [63.4, 124.0], [63.5, 125.0], [63.6, 125.0], [63.7, 126.0], [63.8, 126.0], [63.9, 127.0], [64.0, 127.0], [64.1, 128.0], [64.2, 128.0], [64.3, 129.0], [64.4, 129.0], [64.5, 130.0], [64.6, 132.0], [64.7, 133.0], [64.8, 134.0], [64.9, 321.0], [65.0, 322.0], [65.1, 322.0], [65.2, 323.0], [65.3, 323.0], [65.4, 323.0], [65.5, 324.0], [65.6, 324.0], [65.7, 325.0], [65.8, 325.0], [65.9, 326.0], [66.0, 327.0], [66.1, 327.0], [66.2, 328.0], [66.3, 328.0], [66.4, 329.0], [66.5, 330.0], [66.6, 332.0], [66.7, 334.0], [66.8, 335.0], [66.9, 335.0], [67.0, 335.0], [67.1, 335.0], [67.2, 335.0], [67.3, 335.0], [67.4, 335.0], [67.5, 336.0], [67.6, 336.0], [67.7, 336.0], [67.8, 336.0], [67.9, 336.0], [68.0, 336.0], [68.1, 336.0], [68.2, 336.0], [68.3, 336.0], [68.4, 336.0], [68.5, 336.0], [68.6, 336.0], [68.7, 336.0], [68.8, 337.0], [68.9, 337.0], [69.0, 337.0], [69.1, 337.0], [69.2, 338.0], [69.3, 338.0], [69.4, 338.0], [69.5, 338.0], [69.6, 339.0], [69.7, 339.0], [69.8, 339.0], [69.9, 339.0], [70.0, 339.0], [70.1, 340.0], [70.2, 341.0], [70.3, 342.0], [70.4, 343.0], [70.5, 343.0], [70.6, 343.0], [70.7, 343.0], [70.8, 343.0], [70.9, 343.0], [71.0, 343.0], [71.1, 343.0], [71.2, 344.0], [71.3, 344.0], [71.4, 344.0], [71.5, 345.0], [71.6, 345.0], [71.7, 345.0], [71.8, 345.0], [71.9, 345.0], [72.0, 345.0], [72.1, 346.0], [72.2, 346.0], [72.3, 346.0], [72.4, 346.0], [72.5, 346.0], [72.6, 346.0], [72.7, 346.0], [72.8, 346.0], [72.9, 346.0], [73.0, 353.0], [73.1, 354.0], [73.2, 361.0], [73.3, 361.0], [73.4, 361.0], [73.5, 362.0], [73.6, 362.0], [73.7, 362.0], [73.8, 363.0], [73.9, 363.0], [74.0, 363.0], [74.1, 363.0], [74.2, 363.0], [74.3, 364.0], [74.4, 364.0], [74.5, 365.0], [74.6, 365.0], [74.7, 365.0], [74.8, 365.0], [74.9, 365.0], [75.0, 366.0], [75.1, 366.0], [75.2, 366.0], [75.3, 367.0], [75.4, 368.0], [75.5, 368.0], [75.6, 368.0], [75.7, 368.0], [75.8, 369.0], [75.9, 369.0], [76.0, 369.0], [76.1, 370.0], [76.2, 370.0], [76.3, 370.0], [76.4, 370.0], [76.5, 370.0], [76.6, 370.0], [76.7, 370.0], [76.8, 371.0], [76.9, 371.0], [77.0, 371.0], [77.1, 371.0], [77.2, 371.0], [77.3, 371.0], [77.4, 371.0], [77.5, 371.0], [77.6, 371.0], [77.7, 372.0], [77.8, 372.0], [77.9, 372.0], [78.0, 372.0], [78.1, 372.0], [78.2, 372.0], [78.3, 372.0], [78.4, 372.0], [78.5, 372.0], [78.6, 373.0], [78.7, 373.0], [78.8, 373.0], [78.9, 373.0], [79.0, 374.0], [79.1, 374.0], [79.2, 374.0], [79.3, 374.0], [79.4, 374.0], [79.5, 374.0], [79.6, 374.0], [79.7, 375.0], [79.8, 375.0], [79.9, 376.0], [80.0, 377.0], [80.1, 378.0], [80.2, 378.0], [80.3, 379.0], [80.4, 379.0], [80.5, 380.0], [80.6, 380.0], [80.7, 381.0], [80.8, 382.0], [80.9, 383.0], [81.0, 383.0], [81.1, 384.0], [81.2, 384.0], [81.3, 384.0], [81.4, 384.0], [81.5, 384.0], [81.6, 385.0], [81.7, 385.0], [81.8, 385.0], [81.9, 385.0], [82.0, 385.0], [82.1, 385.0], [82.2, 386.0], [82.3, 386.0], [82.4, 387.0], [82.5, 387.0], [82.6, 388.0], [82.7, 388.0], [82.8, 388.0], [82.9, 390.0], [83.0, 390.0], [83.1, 391.0], [83.2, 391.0], [83.3, 391.0], [83.4, 391.0], [83.5, 391.0], [83.6, 392.0], [83.7, 392.0], [83.8, 392.0], [83.9, 393.0], [84.0, 393.0], [84.1, 394.0], [84.2, 394.0], [84.3, 395.0], [84.4, 402.0], [84.5, 402.0], [84.6, 403.0], [84.7, 404.0], [84.8, 405.0], [84.9, 405.0], [85.0, 405.0], [85.1, 405.0], [85.2, 406.0], [85.3, 406.0], [85.4, 406.0], [85.5, 406.0], [85.6, 406.0], [85.7, 407.0], [85.8, 407.0], [85.9, 407.0], [86.0, 407.0], [86.1, 407.0], [86.2, 407.0], [86.3, 408.0], [86.4, 408.0], [86.5, 408.0], [86.6, 408.0], [86.7, 409.0], [86.8, 410.0], [86.9, 411.0], [87.0, 412.0], [87.1, 412.0], [87.2, 412.0], [87.3, 412.0], [87.4, 413.0], [87.5, 414.0], [87.6, 416.0], [87.7, 417.0], [87.8, 418.0], [87.9, 418.0], [88.0, 419.0], [88.1, 421.0], [88.2, 425.0], [88.3, 425.0], [88.4, 430.0], [88.5, 439.0], [88.6, 451.0], [88.7, 451.0], [88.8, 452.0], [88.9, 452.0], [89.0, 452.0], [89.1, 452.0], [89.2, 452.0], [89.3, 453.0], [89.4, 453.0], [89.5, 453.0], [89.6, 454.0], [89.7, 455.0], [89.8, 455.0], [89.9, 474.0], [90.0, 477.0], [90.1, 478.0], [90.2, 479.0], [90.3, 483.0], [90.4, 484.0], [90.5, 484.0], [90.6, 485.0], [90.7, 485.0], [90.8, 485.0], [90.9, 486.0], [91.0, 486.0], [91.1, 487.0], [91.2, 488.0], [91.3, 489.0], [91.4, 491.0], [91.5, 494.0], [91.6, 497.0], [91.7, 512.0], [91.8, 513.0], [91.9, 513.0], [92.0, 513.0], [92.1, 513.0], [92.2, 514.0], [92.3, 514.0], [92.4, 515.0], [92.5, 517.0], [92.6, 518.0], [92.7, 520.0], [92.8, 520.0], [92.9, 521.0], [93.0, 521.0], [93.1, 521.0], [93.2, 522.0], [93.3, 522.0], [93.4, 522.0], [93.5, 522.0], [93.6, 522.0], [93.7, 523.0], [93.8, 523.0], [93.9, 523.0], [94.0, 531.0], [94.1, 533.0], [94.2, 534.0], [94.3, 537.0], [94.4, 538.0], [94.5, 540.0], [94.6, 542.0], [94.7, 543.0], [94.8, 572.0], [94.9, 576.0], [95.0, 589.0], [95.1, 694.0], [95.2, 715.0], [95.3, 721.0], [95.4, 722.0], [95.5, 723.0], [95.6, 723.0], [95.7, 723.0], [95.8, 724.0], [95.9, 725.0], [96.0, 725.0], [96.1, 725.0], [96.2, 726.0], [96.3, 727.0], [96.4, 727.0], [96.5, 728.0], [96.6, 747.0], [96.7, 851.0], [96.8, 854.0], [96.9, 855.0], [97.0, 856.0], [97.1, 857.0], [97.2, 857.0], [97.3, 858.0], [97.4, 859.0], [97.5, 860.0], [97.6, 862.0], [97.7, 863.0], [97.8, 864.0], [97.9, 865.0], [98.0, 866.0], [98.1, 866.0], [98.2, 974.0], [98.3, 974.0], [98.4, 975.0], [98.5, 975.0], [98.6, 976.0], [98.7, 978.0], [98.8, 979.0], [98.9, 979.0], [99.0, 979.0], [99.1, 980.0], [99.2, 990.0], [99.3, 997.0], [99.4, 999.0], [99.5, 1002.0], [99.6, 1191.0], [99.7, 1225.0], [99.8, 1226.0], [99.9, 1227.0]], "isOverall": false, "label": "Post_Create", "isController": false}, {"data": [[0.0, 0.0], [0.1, 0.0], [0.2, 0.0], [0.3, 0.0], [0.4, 0.0], [0.5, 0.0], [0.6, 0.0], [0.7, 0.0], [0.8, 0.0], [0.9, 0.0], [1.0, 0.0], [1.1, 0.0], [1.2, 0.0], [1.3, 0.0], [1.4, 0.0], [1.5, 0.0], [1.6, 0.0], [1.7, 0.0], [1.8, 0.0], [1.9, 0.0], [2.0, 0.0], [2.1, 0.0], [2.2, 0.0], [2.3, 0.0], [2.4, 0.0], [2.5, 0.0], [2.6, 0.0], [2.7, 0.0], [2.8, 0.0], [2.9, 0.0], [3.0, 0.0], [3.1, 0.0], [3.2, 0.0], [3.3, 0.0], [3.4, 0.0], [3.5, 0.0], [3.6, 0.0], [3.7, 0.0], [3.8, 0.0], [3.9, 0.0], [4.0, 0.0], [4.1, 0.0], [4.2, 0.0], [4.3, 0.0], [4.4, 0.0], [4.5, 0.0], [4.6, 0.0], [4.7, 0.0], [4.8, 0.0], [4.9, 0.0], [5.0, 0.0], [5.1, 0.0], [5.2, 0.0], [5.3, 0.0], [5.4, 0.0], [5.5, 0.0], [5.6, 0.0], [5.7, 0.0], [5.8, 0.0], [5.9, 0.0], [6.0, 0.0], [6.1, 0.0], [6.2, 0.0], [6.3, 0.0], [6.4, 0.0], [6.5, 0.0], [6.6, 0.0], [6.7, 0.0], [6.8, 0.0], [6.9, 0.0], [7.0, 0.0], [7.1, 0.0], [7.2, 0.0], [7.3, 0.0], [7.4, 0.0], [7.5, 0.0], [7.6, 0.0], [7.7, 0.0], [7.8, 0.0], [7.9, 0.0], [8.0, 0.0], [8.1, 0.0], [8.2, 0.0], [8.3, 0.0], [8.4, 0.0], [8.5, 0.0], [8.6, 0.0], [8.7, 0.0], [8.8, 0.0], [8.9, 0.0], [9.0, 0.0], [9.1, 0.0], [9.2, 0.0], [9.3, 0.0], [9.4, 0.0], [9.5, 0.0], [9.6, 0.0], [9.7, 0.0], [9.8, 0.0], [9.9, 0.0], [10.0, 0.0], [10.1, 0.0], [10.2, 0.0], [10.3, 0.0], [10.4, 0.0], [10.5, 0.0], [10.6, 0.0], [10.7, 0.0], [10.8, 0.0], [10.9, 0.0], [11.0, 0.0], [11.1, 0.0], [11.2, 0.0], [11.3, 0.0], [11.4, 0.0], [11.5, 0.0], [11.6, 0.0], [11.7, 0.0], [11.8, 0.0], [11.9, 0.0], [12.0, 0.0], [12.1, 0.0], [12.2, 0.0], [12.3, 1.0], [12.4, 1.0], [12.5, 1.0], [12.6, 1.0], [12.7, 1.0], [12.8, 1.0], [12.9, 1.0], [13.0, 1.0], [13.1, 1.0], [13.2, 1.0], [13.3, 1.0], [13.4, 1.0], [13.5, 1.0], [13.6, 1.0], [13.7, 1.0], [13.8, 1.0], [13.9, 1.0], [14.0, 1.0], [14.1, 1.0], [14.2, 1.0], [14.3, 1.0], [14.4, 1.0], [14.5, 1.0], [14.6, 1.0], [14.7, 1.0], [14.8, 1.0], [14.9, 1.0], [15.0, 1.0], [15.1, 1.0], [15.2, 1.0], [15.3, 1.0], [15.4, 1.0], [15.5, 1.0], [15.6, 1.0], [15.7, 1.0], [15.8, 1.0], [15.9, 1.0], [16.0, 1.0], [16.1, 1.0], [16.2, 1.0], [16.3, 1.0], [16.4, 1.0], [16.5, 1.0], [16.6, 1.0], [16.7, 1.0], [16.8, 1.0], [16.9, 1.0], [17.0, 1.0], [17.1, 1.0], [17.2, 1.0], [17.3, 1.0], [17.4, 1.0], [17.5, 1.0], [17.6, 1.0], [17.7, 1.0], [17.8, 1.0], [17.9, 1.0], [18.0, 1.0], [18.1, 1.0], [18.2, 1.0], [18.3, 1.0], [18.4, 1.0], [18.5, 1.0], [18.6, 1.0], [18.7, 1.0], [18.8, 1.0], [18.9, 1.0], [19.0, 1.0], [19.1, 1.0], [19.2, 1.0], [19.3, 1.0], [19.4, 1.0], [19.5, 1.0], [19.6, 1.0], [19.7, 1.0], [19.8, 1.0], [19.9, 1.0], [20.0, 1.0], [20.1, 1.0], [20.2, 1.0], [20.3, 1.0], [20.4, 1.0], [20.5, 1.0], [20.6, 1.0], [20.7, 1.0], [20.8, 1.0], [20.9, 1.0], [21.0, 1.0], [21.1, 1.0], [21.2, 1.0], [21.3, 1.0], [21.4, 1.0], [21.5, 1.0], [21.6, 1.0], [21.7, 1.0], [21.8, 1.0], [21.9, 1.0], [22.0, 1.0], [22.1, 1.0], [22.2, 1.0], [22.3, 1.0], [22.4, 1.0], [22.5, 1.0], [22.6, 1.0], [22.7, 1.0], [22.8, 1.0], [22.9, 1.0], [23.0, 1.0], [23.1, 1.0], [23.2, 1.0], [23.3, 1.0], [23.4, 1.0], [23.5, 1.0], [23.6, 1.0], [23.7, 1.0], [23.8, 1.0], [23.9, 1.0], [24.0, 1.0], [24.1, 1.0], [24.2, 1.0], [24.3, 1.0], [24.4, 1.0], [24.5, 1.0], [24.6, 1.0], [24.7, 1.0], [24.8, 1.0], [24.9, 1.0], [25.0, 1.0], [25.1, 1.0], [25.2, 1.0], [25.3, 1.0], [25.4, 1.0], [25.5, 1.0], [25.6, 1.0], [25.7, 1.0], [25.8, 1.0], [25.9, 1.0], [26.0, 1.0], [26.1, 1.0], [26.2, 1.0], [26.3, 1.0], [26.4, 1.0], [26.5, 1.0], [26.6, 1.0], [26.7, 1.0], [26.8, 1.0], [26.9, 1.0], [27.0, 1.0], [27.1, 1.0], [27.2, 1.0], [27.3, 1.0], [27.4, 1.0], [27.5, 1.0], [27.6, 1.0], [27.7, 1.0], [27.8, 1.0], [27.9, 1.0], [28.0, 1.0], [28.1, 1.0], [28.2, 1.0], [28.3, 1.0], [28.4, 1.0], [28.5, 1.0], [28.6, 1.0], [28.7, 1.0], [28.8, 1.0], [28.9, 1.0], [29.0, 1.0], [29.1, 1.0], [29.2, 1.0], [29.3, 1.0], [29.4, 1.0], [29.5, 1.0], [29.6, 1.0], [29.7, 1.0], [29.8, 1.0], [29.9, 1.0], [30.0, 1.0], [30.1, 1.0], [30.2, 1.0], [30.3, 1.0], [30.4, 1.0], [30.5, 1.0], [30.6, 1.0], [30.7, 1.0], [30.8, 1.0], [30.9, 1.0], [31.0, 1.0], [31.1, 1.0], [31.2, 1.0], [31.3, 1.0], [31.4, 1.0], [31.5, 1.0], [31.6, 1.0], [31.7, 1.0], [31.8, 1.0], [31.9, 1.0], [32.0, 1.0], [32.1, 1.0], [32.2, 1.0], [32.3, 1.0], [32.4, 1.0], [32.5, 1.0], [32.6, 1.0], [32.7, 1.0], [32.8, 1.0], [32.9, 1.0], [33.0, 1.0], [33.1, 1.0], [33.2, 1.0], [33.3, 1.0], [33.4, 1.0], [33.5, 1.0], [33.6, 1.0], [33.7, 1.0], [33.8, 1.0], [33.9, 1.0], [34.0, 1.0], [34.1, 1.0], [34.2, 1.0], [34.3, 1.0], [34.4, 1.0], [34.5, 1.0], [34.6, 1.0], [34.7, 1.0], [34.8, 1.0], [34.9, 1.0], [35.0, 1.0], [35.1, 1.0], [35.2, 1.0], [35.3, 1.0], [35.4, 1.0], [35.5, 1.0], [35.6, 1.0], [35.7, 1.0], [35.8, 1.0], [35.9, 1.0], [36.0, 1.0], [36.1, 1.0], [36.2, 1.0], [36.3, 1.0], [36.4, 1.0], [36.5, 1.0], [36.6, 1.0], [36.7, 1.0], [36.8, 1.0], [36.9, 1.0], [37.0, 1.0], [37.1, 1.0], [37.2, 1.0], [37.3, 1.0], [37.4, 1.0], [37.5, 1.0], [37.6, 1.0], [37.7, 1.0], [37.8, 1.0], [37.9, 1.0], [38.0, 1.0], [38.1, 1.0], [38.2, 1.0], [38.3, 1.0], [38.4, 1.0], [38.5, 1.0], [38.6, 1.0], [38.7, 1.0], [38.8, 1.0], [38.9, 1.0], [39.0, 1.0], [39.1, 1.0], [39.2, 1.0], [39.3, 1.0], [39.4, 1.0], [39.5, 1.0], [39.6, 1.0], [39.7, 1.0], [39.8, 1.0], [39.9, 1.0], [40.0, 1.0], [40.1, 1.0], [40.2, 1.0], [40.3, 1.0], [40.4, 1.0], [40.5, 1.0], [40.6, 1.0], [40.7, 1.0], [40.8, 1.0], [40.9, 1.0], [41.0, 1.0], [41.1, 1.0], [41.2, 1.0], [41.3, 1.0], [41.4, 1.0], [41.5, 1.0], [41.6, 1.0], [41.7, 1.0], [41.8, 1.0], [41.9, 1.0], [42.0, 1.0], [42.1, 1.0], [42.2, 1.0], [42.3, 1.0], [42.4, 1.0], [42.5, 1.0], [42.6, 1.0], [42.7, 1.0], [42.8, 1.0], [42.9, 1.0], [43.0, 1.0], [43.1, 1.0], [43.2, 1.0], [43.3, 1.0], [43.4, 1.0], [43.5, 1.0], [43.6, 1.0], [43.7, 1.0], [43.8, 1.0], [43.9, 1.0], [44.0, 1.0], [44.1, 1.0], [44.2, 1.0], [44.3, 1.0], [44.4, 1.0], [44.5, 1.0], [44.6, 1.0], [44.7, 1.0], [44.8, 1.0], [44.9, 1.0], [45.0, 1.0], [45.1, 1.0], [45.2, 1.0], [45.3, 1.0], [45.4, 1.0], [45.5, 1.0], [45.6, 1.0], [45.7, 1.0], [45.8, 1.0], [45.9, 1.0], [46.0, 1.0], [46.1, 1.0], [46.2, 1.0], [46.3, 1.0], [46.4, 1.0], [46.5, 1.0], [46.6, 1.0], [46.7, 1.0], [46.8, 1.0], [46.9, 1.0], [47.0, 1.0], [47.1, 1.0], [47.2, 1.0], [47.3, 1.0], [47.4, 1.0], [47.5, 1.0], [47.6, 1.0], [47.7, 1.0], [47.8, 1.0], [47.9, 1.0], [48.0, 1.0], [48.1, 1.0], [48.2, 1.0], [48.3, 1.0], [48.4, 1.0], [48.5, 1.0], [48.6, 1.0], [48.7, 1.0], [48.8, 1.0], [48.9, 1.0], [49.0, 1.0], [49.1, 1.0], [49.2, 1.0], [49.3, 1.0], [49.4, 1.0], [49.5, 1.0], [49.6, 1.0], [49.7, 1.0], [49.8, 1.0], [49.9, 1.0], [50.0, 1.0], [50.1, 1.0], [50.2, 1.0], [50.3, 1.0], [50.4, 1.0], [50.5, 1.0], [50.6, 1.0], [50.7, 1.0], [50.8, 1.0], [50.9, 1.0], [51.0, 1.0], [51.1, 1.0], [51.2, 1.0], [51.3, 1.0], [51.4, 1.0], [51.5, 1.0], [51.6, 1.0], [51.7, 1.0], [51.8, 1.0], [51.9, 1.0], [52.0, 1.0], [52.1, 1.0], [52.2, 1.0], [52.3, 1.0], [52.4, 1.0], [52.5, 2.0], [52.6, 2.0], [52.7, 2.0], [52.8, 2.0], [52.9, 2.0], [53.0, 2.0], [53.1, 2.0], [53.2, 2.0], [53.3, 2.0], [53.4, 2.0], [53.5, 2.0], [53.6, 2.0], [53.7, 2.0], [53.8, 2.0], [53.9, 2.0], [54.0, 2.0], [54.1, 2.0], [54.2, 2.0], [54.3, 2.0], [54.4, 2.0], [54.5, 2.0], [54.6, 2.0], [54.7, 2.0], [54.8, 2.0], [54.9, 2.0], [55.0, 2.0], [55.1, 2.0], [55.2, 3.0], [55.3, 3.0], [55.4, 3.0], [55.5, 3.0], [55.6, 3.0], [55.7, 4.0], [55.8, 4.0], [55.9, 4.0], [56.0, 4.0], [56.1, 4.0], [56.2, 4.0], [56.3, 4.0], [56.4, 5.0], [56.5, 5.0], [56.6, 5.0], [56.7, 6.0], [56.8, 6.0], [56.9, 7.0], [57.0, 9.0], [57.1, 9.0], [57.2, 9.0], [57.3, 10.0], [57.4, 10.0], [57.5, 11.0], [57.6, 11.0], [57.7, 11.0], [57.8, 11.0], [57.9, 12.0], [58.0, 14.0], [58.1, 15.0], [58.2, 16.0], [58.3, 23.0], [58.4, 29.0], [58.5, 32.0], [58.6, 35.0], [58.7, 39.0], [58.8, 39.0], [58.9, 40.0], [59.0, 40.0], [59.1, 41.0], [59.2, 42.0], [59.3, 49.0], [59.4, 53.0], [59.5, 54.0], [59.6, 57.0], [59.7, 67.0], [59.8, 68.0], [59.9, 70.0], [60.0, 73.0], [60.1, 73.0], [60.2, 75.0], [60.3, 76.0], [60.4, 76.0], [60.5, 79.0], [60.6, 89.0], [60.7, 90.0], [60.8, 91.0], [60.9, 100.0], [61.0, 101.0], [61.1, 104.0], [61.2, 106.0], [61.3, 107.0], [61.4, 108.0], [61.5, 112.0], [61.6, 117.0], [61.7, 119.0], [61.8, 120.0], [61.9, 133.0], [62.0, 135.0], [62.1, 136.0], [62.2, 141.0], [62.3, 146.0], [62.4, 150.0], [62.5, 160.0], [62.6, 174.0], [62.7, 177.0], [62.8, 178.0], [62.9, 179.0], [63.0, 180.0], [63.1, 181.0], [63.2, 188.0], [63.3, 202.0], [63.4, 204.0], [63.5, 204.0], [63.6, 205.0], [63.7, 206.0], [63.8, 211.0], [63.9, 227.0], [64.0, 227.0], [64.1, 228.0], [64.2, 228.0], [64.3, 229.0], [64.4, 229.0], [64.5, 230.0], [64.6, 338.0], [64.7, 339.0], [64.8, 339.0], [64.9, 340.0], [65.0, 340.0], [65.1, 340.0], [65.2, 340.0], [65.3, 340.0], [65.4, 340.0], [65.5, 340.0], [65.6, 341.0], [65.7, 341.0], [65.8, 341.0], [65.9, 344.0], [66.0, 344.0], [66.1, 347.0], [66.2, 363.0], [66.3, 364.0], [66.4, 364.0], [66.5, 365.0], [66.6, 367.0], [66.7, 368.0], [66.8, 369.0], [66.9, 369.0], [67.0, 370.0], [67.1, 370.0], [67.2, 371.0], [67.3, 371.0], [67.4, 371.0], [67.5, 372.0], [67.6, 372.0], [67.7, 373.0], [67.8, 373.0], [67.9, 373.0], [68.0, 373.0], [68.1, 373.0], [68.2, 373.0], [68.3, 374.0], [68.4, 374.0], [68.5, 374.0], [68.6, 375.0], [68.7, 375.0], [68.8, 376.0], [68.9, 376.0], [69.0, 377.0], [69.1, 377.0], [69.2, 377.0], [69.3, 380.0], [69.4, 383.0], [69.5, 383.0], [69.6, 384.0], [69.7, 385.0], [69.8, 385.0], [69.9, 385.0], [70.0, 385.0], [70.1, 385.0], [70.2, 386.0], [70.3, 386.0], [70.4, 386.0], [70.5, 386.0], [70.6, 386.0], [70.7, 387.0], [70.8, 387.0], [70.9, 388.0], [71.0, 388.0], [71.1, 389.0], [71.2, 389.0], [71.3, 390.0], [71.4, 390.0], [71.5, 395.0], [71.6, 395.0], [71.7, 396.0], [71.8, 397.0], [71.9, 398.0], [72.0, 399.0], [72.1, 400.0], [72.2, 400.0], [72.3, 401.0], [72.4, 409.0], [72.5, 421.0], [72.6, 421.0], [72.7, 422.0], [72.8, 422.0], [72.9, 422.0], [73.0, 422.0], [73.1, 422.0], [73.2, 422.0], [73.3, 422.0], [73.4, 422.0], [73.5, 423.0], [73.6, 423.0], [73.7, 423.0], [73.8, 423.0], [73.9, 425.0], [74.0, 425.0], [74.1, 426.0], [74.2, 441.0], [74.3, 445.0], [74.4, 445.0], [74.5, 445.0], [74.6, 445.0], [74.7, 446.0], [74.8, 446.0], [74.9, 446.0], [75.0, 446.0], [75.1, 446.0], [75.2, 448.0], [75.3, 448.0], [75.4, 449.0], [75.5, 449.0], [75.6, 451.0], [75.7, 454.0], [75.8, 477.0], [75.9, 481.0], [76.0, 482.0], [76.1, 482.0], [76.2, 482.0], [76.3, 487.0], [76.4, 488.0], [76.5, 489.0], [76.6, 492.0], [76.7, 493.0], [76.8, 494.0], [76.9, 497.0], [77.0, 538.0], [77.1, 539.0], [77.2, 540.0], [77.3, 540.0], [77.4, 540.0], [77.5, 541.0], [77.6, 541.0], [77.7, 541.0], [77.8, 541.0], [77.9, 542.0], [78.0, 542.0], [78.1, 543.0], [78.2, 543.0], [78.3, 543.0], [78.4, 544.0], [78.5, 604.0], [78.6, 605.0], [78.7, 605.0], [78.8, 619.0], [78.9, 620.0], [79.0, 620.0], [79.1, 620.0], [79.2, 620.0], [79.3, 621.0], [79.4, 621.0], [79.5, 621.0], [79.6, 621.0], [79.7, 622.0], [79.8, 622.0], [79.9, 622.0], [80.0, 622.0], [80.1, 715.0], [80.2, 719.0], [80.3, 727.0], [80.4, 768.0], [80.5, 783.0], [80.6, 796.0], [80.7, 805.0], [80.8, 958.0], [80.9, 959.0], [81.0, 968.0], [81.1, 993.0], [81.2, 993.0], [81.3, 994.0], [81.4, 994.0], [81.5, 994.0], [81.6, 994.0], [81.7, 994.0], [81.8, 995.0], [81.9, 995.0], [82.0, 995.0], [82.1, 1003.0], [82.2, 2501.0], [82.3, 2501.0], [82.4, 2502.0], [82.5, 2505.0], [82.6, 2535.0], [82.7, 2542.0], [82.8, 2545.0], [82.9, 2549.0], [83.0, 2559.0], [83.1, 2572.0], [83.2, 2575.0], [83.3, 2575.0], [83.4, 2585.0], [83.5, 2602.0], [83.6, 2605.0], [83.7, 2612.0], [83.8, 2672.0], [83.9, 2686.0], [84.0, 2703.0], [84.1, 2709.0], [84.2, 2715.0], [84.3, 2724.0], [84.4, 2728.0], [84.5, 2743.0], [84.6, 2748.0], [84.7, 2767.0], [84.8, 2769.0], [84.9, 2771.0], [85.0, 2774.0], [85.1, 2780.0], [85.2, 2791.0], [85.3, 2806.0], [85.4, 2962.0], [85.5, 2987.0], [85.6, 2996.0], [85.7, 3002.0], [85.8, 3006.0], [85.9, 3007.0], [86.0, 3008.0], [86.1, 3017.0], [86.2, 3021.0], [86.3, 3036.0], [86.4, 3055.0], [86.5, 3061.0], [86.6, 3064.0], [86.7, 3067.0], [86.8, 3071.0], [86.9, 3075.0], [87.0, 3315.0], [87.1, 3322.0], [87.2, 3330.0], [87.3, 3351.0], [87.4, 3355.0], [87.5, 3360.0], [87.6, 3361.0], [87.7, 3364.0], [87.8, 3370.0], [87.9, 3390.0], [88.0, 3401.0], [88.1, 3415.0], [88.2, 3416.0], [88.3, 3421.0], [88.4, 3425.0], [88.5, 3437.0], [88.6, 3705.0], [88.7, 3707.0], [88.8, 3707.0], [88.9, 3708.0], [89.0, 3708.0], [89.1, 3709.0], [89.2, 3710.0], [89.3, 3710.0], [89.4, 3711.0], [89.5, 3713.0], [89.6, 3713.0], [89.7, 3714.0], [89.8, 3715.0], [89.9, 3756.0], [90.0, 3774.0], [90.1, 3785.0], [90.2, 4549.0], [90.3, 4555.0], [90.4, 4562.0], [90.5, 4563.0], [90.6, 4565.0], [90.7, 4566.0], [90.8, 4568.0], [90.9, 4569.0], [91.0, 4570.0], [91.1, 4572.0], [91.2, 4573.0], [91.3, 4576.0], [91.4, 4577.0], [91.5, 4581.0], [91.6, 4583.0], [91.7, 4585.0], [91.8, 4586.0], [91.9, 4587.0], [92.0, 4587.0], [92.1, 4588.0], [92.2, 4588.0], [92.3, 4589.0], [92.4, 4590.0], [92.5, 4596.0], [92.6, 4596.0], [92.7, 4598.0], [92.8, 4600.0], [92.9, 4621.0], [93.0, 4630.0], [93.1, 4634.0], [93.2, 4635.0], [93.3, 4636.0], [93.4, 4638.0], [93.5, 4639.0], [93.6, 4641.0], [93.7, 4642.0], [93.8, 4643.0], [93.9, 4645.0], [94.0, 4647.0], [94.1, 4648.0], [94.2, 4649.0], [94.3, 4650.0], [94.4, 4657.0], [94.5, 4663.0], [94.6, 4671.0], [94.7, 4698.0], [94.8, 4702.0], [94.9, 4727.0], [95.0, 4957.0], [95.1, 4986.0], [95.2, 4995.0], [95.3, 5011.0], [95.4, 5013.0], [95.5, 5019.0], [95.6, 5036.0], [95.7, 5076.0], [95.8, 5077.0], [95.9, 5079.0], [96.0, 5090.0], [96.1, 5092.0], [96.2, 5093.0], [96.3, 5094.0], [96.4, 5096.0], [96.5, 5096.0], [96.6, 5344.0], [96.7, 5364.0], [96.8, 5375.0], [96.9, 5380.0], [97.0, 5383.0], [97.1, 5383.0], [97.2, 5396.0], [97.3, 5400.0], [97.4, 5434.0], [97.5, 5439.0], [97.6, 5446.0], [97.7, 5456.0], [97.8, 5456.0], [97.9, 5458.0], [98.0, 5466.0], [98.1, 5506.0], [98.2, 5805.0], [98.3, 5892.0], [98.4, 5900.0], [98.5, 5901.0], [98.6, 5902.0], [98.7, 5903.0], [98.8, 5934.0], [98.9, 5941.0], [99.0, 5961.0], [99.1, 6010.0], [99.2, 6016.0], [99.3, 6017.0], [99.4, 6018.0], [99.5, 6020.0], [99.6, 6021.0], [99.7, 6031.0], [99.8, 6386.0], [99.9, 6442.0]], "isOverall": false, "label": "GET_All", "isController": false}], "supportsControllersDiscrimination": true, "maxX": 100.0, "title": "Response Time Percentiles"}},
        getOptions: function() {
            return {
                series: {
                    points: { show: false }
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimePercentiles'
                },
                xaxis: {
                    tickDecimals: 1,
                    axisLabel: "Percentiles",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Percentile value in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : %x.2 percentile was %y ms"
                },
                selection: { mode: "xy" },
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimePercentiles"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimesPercentiles"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimesPercentiles"), dataset, prepareOverviewOptions(options));
        }
};

/**
 * @param elementId Id of element where we display message
 */
function setEmptyGraph(elementId) {
    $(function() {
        $(elementId).text("No graph series with filter="+seriesFilter);
    });
}

// Response times percentiles
function refreshResponseTimePercentiles() {
    var infos = responseTimePercentilesInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimePercentiles");
        return;
    }
    if (isGraph($("#flotResponseTimesPercentiles"))){
        infos.createGraph();
    } else {
        var choiceContainer = $("#choicesResponseTimePercentiles");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimesPercentiles", "#overviewResponseTimesPercentiles");
        $('#bodyResponseTimePercentiles .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var responseTimeDistributionInfos = {
        data: {"result": {"minY": 1.0, "minX": 0.0, "maxY": 1333.0, "series": [{"data": [[0.0, 1333.0], [300.0, 175.0], [1200.0, 1.0], [600.0, 41.0], [700.0, 44.0], [100.0, 3.0], [800.0, 26.0], [400.0, 172.0], [200.0, 33.0], [900.0, 15.0], [500.0, 131.0], [1000.0, 26.0]], "isOverall": false, "label": "Delete", "isController": false}, {"data": [[0.0, 1308.0], [1100.0, 9.0], [300.0, 337.0], [1200.0, 1.0], [600.0, 9.0], [700.0, 20.0], [800.0, 9.0], [400.0, 139.0], [900.0, 59.0], [500.0, 95.0], [1000.0, 14.0]], "isOverall": false, "label": "Get_By_Id", "isController": false}, {"data": [[0.0, 1302.0], [1100.0, 2.0], [300.0, 228.0], [600.0, 8.0], [700.0, 28.0], [100.0, 3.0], [200.0, 7.0], [400.0, 219.0], [900.0, 34.0], [500.0, 161.0], [1000.0, 8.0]], "isOverall": false, "label": "Put_By_Id", "isController": false}, {"data": [[0.0, 1215.0], [1100.0, 2.0], [300.0, 390.0], [1200.0, 6.0], [600.0, 3.0], [700.0, 29.0], [100.0, 82.0], [800.0, 31.0], [400.0, 146.0], [900.0, 25.0], [500.0, 68.0], [1000.0, 3.0]], "isOverall": false, "label": "Post_Create", "isController": false}, {"data": [[0.0, 1218.0], [600.0, 33.0], [700.0, 12.0], [800.0, 1.0], [900.0, 27.0], [1000.0, 1.0], [100.0, 48.0], [2400.0, 1.0], [2500.0, 25.0], [2600.0, 11.0], [2700.0, 25.0], [2800.0, 2.0], [2900.0, 6.0], [3000.0, 26.0], [200.0, 26.0], [3300.0, 21.0], [3400.0, 11.0], [3700.0, 31.0], [3600.0, 1.0], [4600.0, 39.0], [4500.0, 53.0], [4700.0, 4.0], [300.0, 150.0], [4900.0, 6.0], [5000.0, 26.0], [5300.0, 15.0], [5400.0, 16.0], [5500.0, 1.0], [5700.0, 1.0], [5800.0, 4.0], [5900.0, 13.0], [6000.0, 14.0], [6300.0, 2.0], [400.0, 98.0], [6400.0, 3.0], [500.0, 29.0]], "isOverall": false, "label": "GET_All", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 100, "maxX": 6400.0, "title": "Response Time Distribution"}},
        getOptions: function() {
            var granularity = this.data.result.granularity;
            return {
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimeDistribution'
                },
                xaxis:{
                    axisLabel: "Response times in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of responses",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                bars : {
                    show: true,
                    barWidth: this.data.result.granularity
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: function(label, xval, yval, flotItem){
                        return yval + " responses for " + label + " were between " + xval + " and " + (xval + granularity) + " ms";
                    }
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimeDistribution"), prepareData(data.result.series, $("#choicesResponseTimeDistribution")), options);
        }

};

// Response time distribution
function refreshResponseTimeDistribution() {
    var infos = responseTimeDistributionInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimeDistribution");
        return;
    }
    if (isGraph($("#flotResponseTimeDistribution"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimeDistribution");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        $('#footerResponseTimeDistribution .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var syntheticResponseTimeDistributionInfos = {
        data: {"result": {"minY": 357.0, "minX": 0.0, "ticks": [[0, "Requests having \nresponse time <= 500ms"], [1, "Requests having \nresponse time > 500ms and <= 1,500ms"], [2, "Requests having \nresponse time > 1,500ms"], [3, "Requests in error"]], "maxY": 6430.0, "series": [{"data": [[0.0, 2210.0]], "color": "#9ACD32", "isOverall": false, "label": "Requests having \nresponse time <= 500ms", "isController": false}, {"data": [[1.0, 1003.0]], "color": "yellow", "isOverall": false, "label": "Requests having \nresponse time > 500ms and <= 1,500ms", "isController": false}, {"data": [[2.0, 357.0]], "color": "orange", "isOverall": false, "label": "Requests having \nresponse time > 1,500ms", "isController": false}, {"data": [[3.0, 6430.0]], "color": "#FF6347", "isOverall": false, "label": "Requests in error", "isController": false}], "supportsControllersDiscrimination": false, "maxX": 3.0, "title": "Synthetic Response Times Distribution"}},
        getOptions: function() {
            return {
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendSyntheticResponseTimeDistribution'
                },
                xaxis:{
                    axisLabel: "Response times ranges",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                    tickLength:0,
                    min:-0.5,
                    max:3.5
                },
                yaxis: {
                    axisLabel: "Number of responses",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                bars : {
                    show: true,
                    align: "center",
                    barWidth: 0.25,
                    fill:.75
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: function(label, xval, yval, flotItem){
                        return yval + " " + label;
                    }
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var options = this.getOptions();
            prepareOptions(options, data);
            options.xaxis.ticks = data.result.ticks;
            $.plot($("#flotSyntheticResponseTimeDistribution"), prepareData(data.result.series, $("#choicesSyntheticResponseTimeDistribution")), options);
        }

};

// Response time distribution
function refreshSyntheticResponseTimeDistribution() {
    var infos = syntheticResponseTimeDistributionInfos;
    prepareSeries(infos.data, true);
    if (isGraph($("#flotSyntheticResponseTimeDistribution"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesSyntheticResponseTimeDistribution");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        $('#footerSyntheticResponseTimeDistribution .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var activeThreadsOverTimeInfos = {
        data: {"result": {"minY": 204.3867521367522, "minX": 1.7091423E12, "maxY": 836.8707538389955, "series": [{"data": [[1.7091423E12, 836.8707538389955], [1.70914236E12, 204.3867521367522]], "isOverall": false, "label": "Test 1000", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.70914236E12, "title": "Active Threads Over Time"}},
        getOptions: function() {
            return {
                series: {
                    stack: true,
                    lines: {
                        show: true,
                        fill: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of active threads",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 6,
                    show: true,
                    container: '#legendActiveThreadsOverTime'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                selection: {
                    mode: 'xy'
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : At %x there were %y active threads"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesActiveThreadsOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotActiveThreadsOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewActiveThreadsOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Active Threads Over Time
function refreshActiveThreadsOverTime(fixTimestamps) {
    var infos = activeThreadsOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 7200000);
    }
    if(isGraph($("#flotActiveThreadsOverTime"))) {
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesActiveThreadsOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotActiveThreadsOverTime", "#overviewActiveThreadsOverTime");
        $('#footerActiveThreadsOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var timeVsThreadsInfos = {
        data: {"result": {"minY": 0.5, "minX": 2.0, "maxY": 6013.0, "series": [{"data": [[2.0, 229.0], [3.0, 235.0], [4.0, 235.0], [5.0, 234.0], [6.0, 235.0], [7.0, 249.0], [8.0, 251.0], [10.0, 251.0], [11.0, 249.0], [13.0, 249.0], [14.0, 248.5], [15.0, 249.0], [17.0, 249.5], [19.0, 249.5], [20.0, 249.0], [21.0, 250.0], [23.0, 250.5], [25.0, 250.0], [26.0, 250.0], [27.0, 250.0], [29.0, 250.0], [30.0, 250.0], [31.0, 251.0], [33.0, 258.5], [35.0, 16.0], [34.0, 391.0], [37.0, 403.5], [39.0, 404.0], [40.0, 407.0], [43.0, 406.0], [42.0, 406.0], [44.0, 407.0], [47.0, 405.0], [46.0, 406.0], [49.0, 405.0], [48.0, 405.0], [51.0, 404.5], [53.0, 405.0], [52.0, 405.0], [55.0, 404.0], [57.0, 404.0], [56.0, 404.0], [59.0, 404.0], [58.0, 404.0], [61.0, 404.0], [62.0, 404.0], [67.0, 571.0], [66.0, 408.0], [65.0, 404.0], [64.0, 403.0], [70.0, 576.0], [69.0, 576.0], [68.0, 577.0], [75.0, 622.0], [73.0, 621.0], [72.0, 577.0], [78.0, 681.0], [77.0, 625.6666666666666], [83.0, 686.0], [82.0, 686.0], [80.0, 682.5], [87.0, 750.0], [86.0, 750.0], [85.0, 750.0], [84.0, 694.0], [91.0, 748.0], [90.0, 749.0], [88.0, 749.0], [94.0, 746.0], [93.0, 748.5], [99.0, 740.0], [98.0, 741.0], [97.0, 741.0], [96.0, 745.0], [103.0, 738.0], [101.0, 738.0], [100.0, 739.0], [106.0, 736.0], [105.0, 736.0], [104.0, 737.0], [111.0, 734.5], [109.0, 735.0], [108.0, 735.0], [115.0, 733.0], [114.0, 734.0], [113.0, 734.0], [112.0, 734.0], [119.0, 731.0], [118.0, 732.0], [117.0, 732.0], [116.0, 733.0], [123.0, 729.0], [120.0, 730.0], [126.0, 727.5], [125.0, 728.0], [134.0, 25.0], [133.0, 25.0], [132.0, 26.0], [131.0, 26.0], [129.0, 26.0], [128.0, 698.5], [143.0, 28.0], [142.0, 27.0], [141.0, 26.0], [140.0, 25.0], [139.0, 23.0], [138.0, 23.0], [137.0, 23.0], [136.0, 24.0], [151.0, 674.3333333333334], [148.0, 684.0], [147.0, 687.0], [146.0, 700.0], [145.0, 701.0], [144.0, 28.0], [159.0, 678.0], [158.0, 679.0], [157.0, 679.0], [156.0, 678.0], [152.0, 674.0], [167.0, 677.0], [162.0, 678.0], [161.0, 678.0], [160.0, 678.0], [173.0, 684.0], [171.0, 677.5714285714286], [170.0, 677.0], [198.0, 435.0], [196.0, 432.55172413793105], [207.0, 18.0], [206.0, 18.0], [205.0, 17.0], [203.0, 16.0], [202.0, 224.5], [200.0, 434.0], [215.0, 420.0], [214.0, 421.0], [212.0, 33.0], [211.0, 20.0], [210.0, 19.0], [209.0, 18.5], [223.0, 409.0], [222.0, 418.0], [220.0, 418.5], [218.0, 419.0], [217.0, 420.0], [216.0, 420.0], [230.0, 953.5], [225.0, 1010.5000000000001], [224.0, 409.0], [238.0, 336.0], [237.0, 332.5], [235.0, 333.0], [234.0, 514.2857142857143], [233.0, 983.0], [247.0, 336.0], [246.0, 336.0], [245.0, 336.0], [244.0, 336.0], [243.0, 335.0], [242.0, 335.5], [240.0, 336.0], [255.0, 339.0], [254.0, 339.0], [253.0, 341.0], [252.0, 340.27272727272725], [251.0, 335.5], [249.0, 336.0], [269.0, 381.0], [270.0, 381.0], [268.0, 382.0], [259.0, 386.0], [258.0, 386.0], [257.0, 387.0], [256.0, 343.0], [267.0, 382.0], [265.0, 382.0], [264.0, 383.0], [263.0, 203.0], [262.0, 385.0], [261.0, 385.0], [275.0, 381.0], [286.0, 380.5], [284.0, 381.0], [283.0, 381.0], [282.0, 382.0], [281.0, 381.0], [279.0, 381.0], [277.0, 380.0], [276.0, 380.0], [274.0, 381.0], [273.0, 381.0], [272.0, 381.5], [301.0, 349.0], [303.0, 350.0], [300.0, 353.44], [291.0, 379.0], [290.0, 379.0], [289.0, 380.0], [288.0, 380.0], [299.0, 368.0], [298.0, 369.0], [296.0, 372.0], [295.0, 378.0], [294.0, 378.0], [292.0, 379.0], [311.0, 423.5], [309.0, 422.0], [308.0, 423.0], [307.0, 420.0], [306.0, 345.0], [305.0, 347.0], [304.0, 349.0], [322.0, 484.88235294117646], [349.0, 237.66666666666666], [348.0, 541.4827586206895], [347.0, 538.0], [346.0, 538.0], [345.0, 541.0], [344.0, 542.0], [343.0, 513.5694444444445], [357.0, 476.36781609195424], [354.0, 38.0], [1000.0, 3.726283048211505]], "isOverall": false, "label": "Delete", "isController": false}, {"data": [[733.4925000000007, 174.00650000000005]], "isOverall": false, "label": "Delete-Aggregated", "isController": false}, {"data": [[39.0, 405.4], [1000.0, 5.393468118195962], [67.0, 573.1600000000001], [66.0, 570.0], [65.0, 404.0], [70.0, 577.0], [68.0, 577.0], [72.0, 589.0], [84.0, 402.5], [96.0, 65.0], [127.0, 699.0], [126.0, 706.7222222222221], [128.0, 693.0], [171.0, 676.0], [198.0, 434.5], [196.0, 440.19999999999993], [222.0, 413.6666666666667], [230.0, 955.1], [225.0, 1057.75], [224.0, 407.66666666666663], [234.0, 846.854166666667], [233.0, 994.25], [255.0, 183.5], [253.0, 340.3333333333333], [252.0, 338.2], [264.0, 383.0], [258.0, 387.0], [257.0, 387.0], [256.0, 332.909090909091], [282.0, 381.0], [281.0, 380.0], [300.0, 354.0], [299.0, 367.5], [307.0, 421.5], [305.0, 346.53571428571433], [322.0, 491.16666666666663], [349.0, 370.0], [343.0, 488.2444444444445], [357.0, 392.69230769230757]], "isOverall": false, "label": "Get_By_Id", "isController": false}, {"data": [[749.6469999999996, 176.47250000000008]], "isOverall": false, "label": "Get_By_Id-Aggregated", "isController": false}, {"data": [[33.0, 260.0], [37.0, 405.0], [39.0, 404.96], [59.0, 403.5], [1000.0, 11.584758942457235], [66.0, 327.0], [72.0, 582.076923076923], [80.0, 682.0], [126.0, 718.5], [8.0, 250.5], [144.0, 708.4285714285713], [173.0, 681.0], [171.0, 677.0], [198.0, 435.0], [196.0, 444.40909090909093], [200.0, 434.0], [212.0, 33.5], [223.0, 409.0], [222.0, 415.37499999999994], [230.0, 951.6111111111111], [225.0, 1013.4444444444445], [224.0, 408.0], [237.0, 333.0], [234.0, 517.8888888888889], [233.0, 996.9333333333334], [253.0, 340.0], [252.0, 336.5], [256.0, 347.11111111111114], [282.0, 381.0], [281.0, 380.0], [301.0, 350.0], [300.0, 357.58333333333326], [296.0, 370.25000000000006], [311.0, 425.0], [305.0, 349.0], [351.0, 38.0], [349.0, 460.15384615384613], [348.0, 540.1666666666667], [345.0, 551.0], [343.0, 511.9066666666665], [357.0, 414.2056737588651], [30.0, 250.5], [31.0, 252.0]], "isOverall": false, "label": "Put_By_Id", "isController": false}, {"data": [[743.2114999999989, 176.4444999999999]], "isOverall": false, "label": "Put_By_Id-Aggregated", "isController": false}, {"data": [[1000.0, 8.970451010886464], [67.0, 571.5], [70.0, 576.0], [69.0, 576.5], [72.0, 589.0], [93.0, 747.0], [123.0, 730.0], [126.0, 723.9629629629632], [128.0, 694.6666666666666], [196.0, 451.5925925925926], [222.0, 414.0], [231.0, 979.0], [230.0, 976.0714285714286], [225.0, 1002.8333333333333], [237.0, 335.8260869565217], [234.0, 846.1333333333332], [233.0, 983.6], [252.0, 337.8333333333333], [249.0, 335.5], [258.0, 387.0], [257.0, 387.0], [256.0, 359.8867924528302], [301.0, 349.0], [300.0, 357.83333333333337], [296.0, 368.0], [311.0, 434.6], [307.0, 420.0], [306.0, 372.7777777777778], [305.0, 345.0], [349.0, 454.83333333333337], [348.0, 539.0], [343.0, 483.15384615384613], [357.0, 416.96109839816944]], "isOverall": false, "label": "Post_Create", "isController": false}, {"data": [[755.029499999999, 169.43250000000006]], "isOverall": false, "label": "Post_Create-Aggregated", "isController": false}, {"data": [[987.0, 7.333333333333334], [968.0, 8.0], [972.0, 1.0], [991.0, 18.0], [977.0, 1.75], [976.0, 107.0], [981.0, 14.5], [980.0, 1.0], [989.0, 0.6666666666666666], [988.0, 1.0], [986.0, 1.0], [985.0, 0.75], [984.0, 22.875], [974.0, 36.66666666666668], [983.0, 0.5], [982.0, 30.0], [1000.0, 13.906311637080854], [999.0, 10.187499999999998], [998.0, 5.379310344827586], [995.0, 4.08695652173913], [993.0, 0.75], [992.0, 0.6666666666666666], [996.0, 0.5], [997.0, 1.0], [126.0, 721.0], [128.0, 692.0], [196.0, 447.1875], [230.0, 968.5], [225.0, 987.0799999999998], [234.0, 1003.0], [254.0, 339.0], [253.0, 340.13043478260875], [256.0, 375.50000000000006], [300.0, 363.7142857142857], [299.0, 366.6], [296.0, 369.5], [295.0, 375.13043478260863], [311.0, 385.76666666666665], [309.0, 421.6666666666667], [307.0, 422.0], [306.0, 344.0], [305.0, 344.0], [322.0, 483.8571428571429], [349.0, 54.0], [348.0, 3456.0], [346.0, 539.0], [345.0, 539.5714285714286], [344.0, 541.3333333333334], [343.0, 1238.4400000000003], [358.0, 2546.052631578947], [357.0, 3175.997777777777], [355.0, 6013.0], [371.0, 2553.5], [370.0, 2562.545454545454]], "isOverall": false, "label": "GET_All", "isController": false}, {"data": [[758.9694999999987, 841.4409999999995]], "isOverall": false, "label": "GET_All-Aggregated", "isController": false}], "supportsControllersDiscrimination": true, "maxX": 1000.0, "title": "Time VS Threads"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    axisLabel: "Number of active threads",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response times in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: { noColumns: 2,show: true, container: '#legendTimeVsThreads' },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s: At %x.2 active threads, Average response time was %y.2 ms"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesTimeVsThreads"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotTimesVsThreads"), dataset, options);
            // setup overview
            $.plot($("#overviewTimesVsThreads"), dataset, prepareOverviewOptions(options));
        }
};

// Time vs threads
function refreshTimeVsThreads(){
    var infos = timeVsThreadsInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyTimeVsThreads");
        return;
    }
    if(isGraph($("#flotTimesVsThreads"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTimeVsThreads");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTimesVsThreads", "#overviewTimesVsThreads");
        $('#footerTimeVsThreads .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var bytesThroughputOverTimeInfos = {
        data : {"result": {"minY": 4760.15, "minX": 1.7091423E12, "maxY": 303059.6, "series": [{"data": [[1.7091423E12, 303059.6], [1.70914236E12, 10300.633333333333]], "isOverall": false, "label": "Bytes received per second", "isController": false}, {"data": [[1.7091423E12, 7044.65], [1.70914236E12, 4760.15]], "isOverall": false, "label": "Bytes sent per second", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.70914236E12, "title": "Bytes Throughput Over Time"}},
        getOptions : function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity) ,
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Bytes / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendBytesThroughputOverTime'
                },
                selection: {
                    mode: "xy"
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y"
                }
            };
        },
        createGraph : function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesBytesThroughputOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotBytesThroughputOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewBytesThroughputOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Bytes throughput Over Time
function refreshBytesThroughputOverTime(fixTimestamps) {
    var infos = bytesThroughputOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 7200000);
    }
    if(isGraph($("#flotBytesThroughputOverTime"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesBytesThroughputOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotBytesThroughputOverTime", "#overviewBytesThroughputOverTime");
        $('#footerBytesThroughputOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var responseTimesOverTimeInfos = {
        data: {"result": {"minY": 96.33354231974924, "minX": 1.7091423E12, "maxY": 875.0109769484081, "series": [{"data": [[1.7091423E12, 96.33354231974924], [1.70914236E12, 479.90370370370385]], "isOverall": false, "label": "Delete", "isController": false}, {"data": [[1.7091423E12, 107.58034682080938], [1.70914236E12, 617.8925925925929]], "isOverall": false, "label": "Get_By_Id", "isController": false}, {"data": [[1.7091423E12, 110.8473464519976], [1.70914236E12, 517.0216718266253]], "isOverall": false, "label": "Put_By_Id", "isController": false}, {"data": [[1.7091423E12, 122.69130925507899], [1.70914236E12, 532.7017543859652]], "isOverall": false, "label": "Post_Create", "isController": false}, {"data": [[1.7091423E12, 875.0109769484081], [1.70914236E12, 497.8202247191011]], "isOverall": false, "label": "GET_All", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.70914236E12, "title": "Response Time Over Time"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average response time was %y ms"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Response Times Over Time
function refreshResponseTimeOverTime(fixTimestamps) {
    var infos = responseTimesOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimeOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 7200000);
    }
    if(isGraph($("#flotResponseTimesOverTime"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimesOverTime", "#overviewResponseTimesOverTime");
        $('#footerResponseTimesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var latenciesOverTimeInfos = {
        data: {"result": {"minY": 93.32789968652038, "minX": 1.7091423E12, "maxY": 865.2601536772779, "series": [{"data": [[1.7091423E12, 93.32789968652038], [1.70914236E12, 479.9012345679011]], "isOverall": false, "label": "Delete", "isController": false}, {"data": [[1.7091423E12, 103.56878612716757], [1.70914236E12, 617.8851851851853]], "isOverall": false, "label": "Get_By_Id", "isController": false}, {"data": [[1.7091423E12, 101.96243291592118], [1.70914236E12, 517.0185758513933]], "isOverall": false, "label": "Put_By_Id", "isController": false}, {"data": [[1.7091423E12, 116.17832957110605], [1.70914236E12, 532.7017543859652]], "isOverall": false, "label": "Post_Create", "isController": false}, {"data": [[1.7091423E12, 865.2601536772779], [1.70914236E12, 497.80337078651667]], "isOverall": false, "label": "GET_All", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.70914236E12, "title": "Latencies Over Time"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response latencies in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendLatenciesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average latency was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesLatenciesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotLatenciesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewLatenciesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Latencies Over Time
function refreshLatenciesOverTime(fixTimestamps) {
    var infos = latenciesOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyLatenciesOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 7200000);
    }
    if(isGraph($("#flotLatenciesOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesLatenciesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotLatenciesOverTime", "#overviewLatenciesOverTime");
        $('#footerLatenciesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var connectTimeOverTimeInfos = {
        data: {"result": {"minY": 0.0, "minX": 1.7091423E12, "maxY": 26.269484083424825, "series": [{"data": [[1.7091423E12, 2.978683385579937], [1.70914236E12, 0.0]], "isOverall": false, "label": "Delete", "isController": false}, {"data": [[1.7091423E12, 3.984971098265893], [1.70914236E12, 0.0]], "isOverall": false, "label": "Get_By_Id", "isController": false}, {"data": [[1.7091423E12, 8.85927251043529], [1.70914236E12, 0.0]], "isOverall": false, "label": "Put_By_Id", "isController": false}, {"data": [[1.7091423E12, 6.487020316027087], [1.70914236E12, 0.0]], "isOverall": false, "label": "Post_Create", "isController": false}, {"data": [[1.7091423E12, 26.269484083424825], [1.70914236E12, 0.0]], "isOverall": false, "label": "GET_All", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.70914236E12, "title": "Connect Time Over Time"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getConnectTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average Connect Time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendConnectTimeOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average connect time was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesConnectTimeOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotConnectTimeOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewConnectTimeOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Connect Time Over Time
function refreshConnectTimeOverTime(fixTimestamps) {
    var infos = connectTimeOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyConnectTimeOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 7200000);
    }
    if(isGraph($("#flotConnectTimeOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesConnectTimeOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotConnectTimeOverTime", "#overviewConnectTimeOverTime");
        $('#footerConnectTimeOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var responseTimePercentilesOverTimeInfos = {
        data: {"result": {"minY": 1.0, "minX": 1.7091423E12, "maxY": 6471.0, "series": [{"data": [[1.7091423E12, 6471.0], [1.70914236E12, 1233.0]], "isOverall": false, "label": "Max", "isController": false}, {"data": [[1.7091423E12, 1.0], [1.70914236E12, 4.0]], "isOverall": false, "label": "Min", "isController": false}, {"data": [[1.7091423E12, 3709.3], [1.70914236E12, 980.5]], "isOverall": false, "label": "90th percentile", "isController": false}, {"data": [[1.7091423E12, 5941.0], [1.70914236E12, 1196.7000000000003]], "isOverall": false, "label": "99th percentile", "isController": false}, {"data": [[1.7091423E12, 484.0], [1.70914236E12, 421.0]], "isOverall": false, "label": "Median", "isController": false}, {"data": [[1.7091423E12, 4669.25], [1.70914236E12, 1000.0]], "isOverall": false, "label": "95th percentile", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.70914236E12, "title": "Response Time Percentiles Over Time (successful requests only)"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true,
                        fill: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Response Time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimePercentilesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Response time was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimePercentilesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimePercentilesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimePercentilesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Response Time Percentiles Over Time
function refreshResponseTimePercentilesOverTime(fixTimestamps) {
    var infos = responseTimePercentilesOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 7200000);
    }
    if(isGraph($("#flotResponseTimePercentilesOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesResponseTimePercentilesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimePercentilesOverTime", "#overviewResponseTimePercentilesOverTime");
        $('#footerResponseTimePercentilesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var responseTimeVsRequestInfos = {
    data: {"result": {"minY": 1.0, "minX": 6.0, "maxY": 2549.0, "series": [{"data": [[550.0, 349.0], [296.0, 342.0], [642.0, 382.0], [745.0, 503.0], [191.0, 711.0], [186.0, 406.0], [6.0, 234.5], [1813.0, 2549.0], [451.0, 555.0], [471.0, 455.0]], "isOverall": false, "label": "Successes", "isController": false}, {"data": [[1472.0, 1.0], [3177.0, 1.0], [1813.0, 1.0]], "isOverall": false, "label": "Failures", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 1000, "maxX": 3177.0, "title": "Response Time Vs Request"}},
    getOptions: function() {
        return {
            series: {
                lines: {
                    show: false
                },
                points: {
                    show: true
                }
            },
            xaxis: {
                axisLabel: "Global number of requests per second",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            yaxis: {
                axisLabel: "Median Response Time in ms",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            legend: {
                noColumns: 2,
                show: true,
                container: '#legendResponseTimeVsRequest'
            },
            selection: {
                mode: 'xy'
            },
            grid: {
                hoverable: true // IMPORTANT! this is needed for tooltip to work
            },
            tooltip: true,
            tooltipOpts: {
                content: "%s : Median response time at %x req/s was %y ms"
            },
            colors: ["#9ACD32", "#FF6347"]
        };
    },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesResponseTimeVsRequest"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotResponseTimeVsRequest"), dataset, options);
        // setup overview
        $.plot($("#overviewResponseTimeVsRequest"), dataset, prepareOverviewOptions(options));

    }
};

// Response Time vs Request
function refreshResponseTimeVsRequest() {
    var infos = responseTimeVsRequestInfos;
    prepareSeries(infos.data);
    if (isGraph($("#flotResponseTimeVsRequest"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimeVsRequest");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimeVsRequest", "#overviewResponseTimeVsRequest");
        $('#footerResponseRimeVsRequest .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var latenciesVsRequestInfos = {
    data: {"result": {"minY": 0.0, "minX": 6.0, "maxY": 2535.0, "series": [{"data": [[550.0, 349.0], [296.0, 342.0], [642.0, 382.0], [745.0, 503.0], [191.0, 711.0], [186.0, 406.0], [6.0, 234.5], [1813.0, 2535.0], [451.0, 555.0], [471.0, 455.0]], "isOverall": false, "label": "Successes", "isController": false}, {"data": [[1472.0, 0.0], [3177.0, 0.0], [1813.0, 0.0]], "isOverall": false, "label": "Failures", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 1000, "maxX": 3177.0, "title": "Latencies Vs Request"}},
    getOptions: function() {
        return{
            series: {
                lines: {
                    show: false
                },
                points: {
                    show: true
                }
            },
            xaxis: {
                axisLabel: "Global number of requests per second",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            yaxis: {
                axisLabel: "Median Latency in ms",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            legend: { noColumns: 2,show: true, container: '#legendLatencyVsRequest' },
            selection: {
                mode: 'xy'
            },
            grid: {
                hoverable: true // IMPORTANT! this is needed for tooltip to work
            },
            tooltip: true,
            tooltipOpts: {
                content: "%s : Median Latency time at %x req/s was %y ms"
            },
            colors: ["#9ACD32", "#FF6347"]
        };
    },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesLatencyVsRequest"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotLatenciesVsRequest"), dataset, options);
        // setup overview
        $.plot($("#overviewLatenciesVsRequest"), dataset, prepareOverviewOptions(options));
    }
};

// Latencies vs Request
function refreshLatenciesVsRequest() {
        var infos = latenciesVsRequestInfos;
        prepareSeries(infos.data);
        if(isGraph($("#flotLatenciesVsRequest"))){
            infos.createGraph();
        }else{
            var choiceContainer = $("#choicesLatencyVsRequest");
            createLegend(choiceContainer, infos);
            infos.createGraph();
            setGraphZoomable("#flotLatenciesVsRequest", "#overviewLatenciesVsRequest");
            $('#footerLatenciesVsRequest .legendColorBox > div').each(function(i){
                $(this).clone().prependTo(choiceContainer.find("li").eq(i));
            });
        }
};

var hitsPerSecondInfos = {
        data: {"result": {"minY": 18.216666666666665, "minX": 1.7091423E12, "maxY": 148.45, "series": [{"data": [[1.7091423E12, 148.45], [1.70914236E12, 18.216666666666665]], "isOverall": false, "label": "hitsPerSecond", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.70914236E12, "title": "Hits Per Second"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of hits / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendHitsPerSecond"
                },
                selection: {
                    mode : 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y.2 hits/sec"
                }
            };
        },
        createGraph: function createGraph() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesHitsPerSecond"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotHitsPerSecond"), dataset, options);
            // setup overview
            $.plot($("#overviewHitsPerSecond"), dataset, prepareOverviewOptions(options));
        }
};

// Hits per second
function refreshHitsPerSecond(fixTimestamps) {
    var infos = hitsPerSecondInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 7200000);
    }
    if (isGraph($("#flotHitsPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesHitsPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotHitsPerSecond", "#overviewHitsPerSecond");
        $('#footerHitsPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var codesPerSecondInfos = {
        data: {"result": {"minY": 23.4, "minX": 1.7091423E12, "maxY": 107.16666666666667, "series": [{"data": [[1.7091423E12, 36.1], [1.70914236E12, 23.4]], "isOverall": false, "label": "200", "isController": false}, {"data": [[1.7091423E12, 107.16666666666667]], "isOverall": false, "label": "Non HTTP response code: org.apache.http.conn.HttpHostConnectException", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.70914236E12, "title": "Codes Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of responses / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendCodesPerSecond"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "Number of Response Codes %s at %x was %y.2 responses / sec"
                }
            };
        },
    createGraph: function() {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesCodesPerSecond"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotCodesPerSecond"), dataset, options);
        // setup overview
        $.plot($("#overviewCodesPerSecond"), dataset, prepareOverviewOptions(options));
    }
};

// Codes per second
function refreshCodesPerSecond(fixTimestamps) {
    var infos = codesPerSecondInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 7200000);
    }
    if(isGraph($("#flotCodesPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesCodesPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotCodesPerSecond", "#overviewCodesPerSecond");
        $('#footerCodesPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var transactionsPerSecondInfos = {
        data: {"result": {"minY": 2.966666666666667, "minX": 1.7091423E12, "maxY": 21.433333333333334, "series": [{"data": [[1.7091423E12, 21.433333333333334]], "isOverall": false, "label": "Put_By_Id-failure", "isController": false}, {"data": [[1.7091423E12, 6.516666666666667], [1.70914236E12, 5.383333333333334]], "isOverall": false, "label": "Put_By_Id-success", "isController": false}, {"data": [[1.7091423E12, 21.433333333333334]], "isOverall": false, "label": "Post_Create-failure", "isController": false}, {"data": [[1.7091423E12, 8.1], [1.70914236E12, 3.8]], "isOverall": false, "label": "Post_Create-success", "isController": false}, {"data": [[1.7091423E12, 21.433333333333334]], "isOverall": false, "label": "Delete-failure", "isController": false}, {"data": [[1.7091423E12, 7.4], [1.70914236E12, 4.5]], "isOverall": false, "label": "Get_By_Id-success", "isController": false}, {"data": [[1.7091423E12, 5.15], [1.70914236E12, 6.75]], "isOverall": false, "label": "Delete-success", "isController": false}, {"data": [[1.7091423E12, 21.433333333333334]], "isOverall": false, "label": "Get_By_Id-failure", "isController": false}, {"data": [[1.7091423E12, 21.433333333333334]], "isOverall": false, "label": "GET_All-failure", "isController": false}, {"data": [[1.7091423E12, 8.933333333333334], [1.70914236E12, 2.966666666666667]], "isOverall": false, "label": "GET_All-success", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.70914236E12, "title": "Transactions Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of transactions / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendTransactionsPerSecond"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y transactions / sec"
                }
            };
        },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesTransactionsPerSecond"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotTransactionsPerSecond"), dataset, options);
        // setup overview
        $.plot($("#overviewTransactionsPerSecond"), dataset, prepareOverviewOptions(options));
    }
};

// Transactions per second
function refreshTransactionsPerSecond(fixTimestamps) {
    var infos = transactionsPerSecondInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyTransactionsPerSecond");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 7200000);
    }
    if(isGraph($("#flotTransactionsPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTransactionsPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTransactionsPerSecond", "#overviewTransactionsPerSecond");
        $('#footerTransactionsPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var totalTPSInfos = {
        data: {"result": {"minY": 23.4, "minX": 1.7091423E12, "maxY": 107.16666666666667, "series": [{"data": [[1.7091423E12, 36.1], [1.70914236E12, 23.4]], "isOverall": false, "label": "Transaction-success", "isController": false}, {"data": [[1.7091423E12, 107.16666666666667]], "isOverall": false, "label": "Transaction-failure", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.70914236E12, "title": "Total Transactions Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of transactions / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendTotalTPS"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y transactions / sec"
                },
                colors: ["#9ACD32", "#FF6347"]
            };
        },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesTotalTPS"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotTotalTPS"), dataset, options);
        // setup overview
        $.plot($("#overviewTotalTPS"), dataset, prepareOverviewOptions(options));
    }
};

// Total Transactions per second
function refreshTotalTPS(fixTimestamps) {
    var infos = totalTPSInfos;
    // We want to ignore seriesFilter
    prepareSeries(infos.data, false, true);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 7200000);
    }
    if(isGraph($("#flotTotalTPS"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTotalTPS");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTotalTPS", "#overviewTotalTPS");
        $('#footerTotalTPS .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

// Collapse the graph matching the specified DOM element depending the collapsed
// status
function collapse(elem, collapsed){
    if(collapsed){
        $(elem).parent().find(".fa-chevron-up").removeClass("fa-chevron-up").addClass("fa-chevron-down");
    } else {
        $(elem).parent().find(".fa-chevron-down").removeClass("fa-chevron-down").addClass("fa-chevron-up");
        if (elem.id == "bodyBytesThroughputOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshBytesThroughputOverTime(true);
            }
            document.location.href="#bytesThroughputOverTime";
        } else if (elem.id == "bodyLatenciesOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshLatenciesOverTime(true);
            }
            document.location.href="#latenciesOverTime";
        } else if (elem.id == "bodyCustomGraph") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshCustomGraph(true);
            }
            document.location.href="#responseCustomGraph";
        } else if (elem.id == "bodyConnectTimeOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshConnectTimeOverTime(true);
            }
            document.location.href="#connectTimeOverTime";
        } else if (elem.id == "bodyResponseTimePercentilesOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimePercentilesOverTime(true);
            }
            document.location.href="#responseTimePercentilesOverTime";
        } else if (elem.id == "bodyResponseTimeDistribution") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimeDistribution();
            }
            document.location.href="#responseTimeDistribution" ;
        } else if (elem.id == "bodySyntheticResponseTimeDistribution") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshSyntheticResponseTimeDistribution();
            }
            document.location.href="#syntheticResponseTimeDistribution" ;
        } else if (elem.id == "bodyActiveThreadsOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshActiveThreadsOverTime(true);
            }
            document.location.href="#activeThreadsOverTime";
        } else if (elem.id == "bodyTimeVsThreads") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTimeVsThreads();
            }
            document.location.href="#timeVsThreads" ;
        } else if (elem.id == "bodyCodesPerSecond") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshCodesPerSecond(true);
            }
            document.location.href="#codesPerSecond";
        } else if (elem.id == "bodyTransactionsPerSecond") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTransactionsPerSecond(true);
            }
            document.location.href="#transactionsPerSecond";
        } else if (elem.id == "bodyTotalTPS") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTotalTPS(true);
            }
            document.location.href="#totalTPS";
        } else if (elem.id == "bodyResponseTimeVsRequest") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimeVsRequest();
            }
            document.location.href="#responseTimeVsRequest";
        } else if (elem.id == "bodyLatenciesVsRequest") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshLatenciesVsRequest();
            }
            document.location.href="#latencyVsRequest";
        }
    }
}

/*
 * Activates or deactivates all series of the specified graph (represented by id parameter)
 * depending on checked argument.
 */
function toggleAll(id, checked){
    var placeholder = document.getElementById(id);

    var cases = $(placeholder).find(':checkbox');
    cases.prop('checked', checked);
    $(cases).parent().children().children().toggleClass("legend-disabled", !checked);

    var choiceContainer;
    if ( id == "choicesBytesThroughputOverTime"){
        choiceContainer = $("#choicesBytesThroughputOverTime");
        refreshBytesThroughputOverTime(false);
    } else if(id == "choicesResponseTimesOverTime"){
        choiceContainer = $("#choicesResponseTimesOverTime");
        refreshResponseTimeOverTime(false);
    }else if(id == "choicesResponseCustomGraph"){
        choiceContainer = $("#choicesResponseCustomGraph");
        refreshCustomGraph(false);
    } else if ( id == "choicesLatenciesOverTime"){
        choiceContainer = $("#choicesLatenciesOverTime");
        refreshLatenciesOverTime(false);
    } else if ( id == "choicesConnectTimeOverTime"){
        choiceContainer = $("#choicesConnectTimeOverTime");
        refreshConnectTimeOverTime(false);
    } else if ( id == "choicesResponseTimePercentilesOverTime"){
        choiceContainer = $("#choicesResponseTimePercentilesOverTime");
        refreshResponseTimePercentilesOverTime(false);
    } else if ( id == "choicesResponseTimePercentiles"){
        choiceContainer = $("#choicesResponseTimePercentiles");
        refreshResponseTimePercentiles();
    } else if(id == "choicesActiveThreadsOverTime"){
        choiceContainer = $("#choicesActiveThreadsOverTime");
        refreshActiveThreadsOverTime(false);
    } else if ( id == "choicesTimeVsThreads"){
        choiceContainer = $("#choicesTimeVsThreads");
        refreshTimeVsThreads();
    } else if ( id == "choicesSyntheticResponseTimeDistribution"){
        choiceContainer = $("#choicesSyntheticResponseTimeDistribution");
        refreshSyntheticResponseTimeDistribution();
    } else if ( id == "choicesResponseTimeDistribution"){
        choiceContainer = $("#choicesResponseTimeDistribution");
        refreshResponseTimeDistribution();
    } else if ( id == "choicesHitsPerSecond"){
        choiceContainer = $("#choicesHitsPerSecond");
        refreshHitsPerSecond(false);
    } else if(id == "choicesCodesPerSecond"){
        choiceContainer = $("#choicesCodesPerSecond");
        refreshCodesPerSecond(false);
    } else if ( id == "choicesTransactionsPerSecond"){
        choiceContainer = $("#choicesTransactionsPerSecond");
        refreshTransactionsPerSecond(false);
    } else if ( id == "choicesTotalTPS"){
        choiceContainer = $("#choicesTotalTPS");
        refreshTotalTPS(false);
    } else if ( id == "choicesResponseTimeVsRequest"){
        choiceContainer = $("#choicesResponseTimeVsRequest");
        refreshResponseTimeVsRequest();
    } else if ( id == "choicesLatencyVsRequest"){
        choiceContainer = $("#choicesLatencyVsRequest");
        refreshLatenciesVsRequest();
    }
    var color = checked ? "black" : "#818181";
    if(choiceContainer != null) {
        choiceContainer.find("label").each(function(){
            this.style.color = color;
        });
    }
}

